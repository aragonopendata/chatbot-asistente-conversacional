#!/usr/bin/env python
# -*- coding: utf-8 -*-

import unittest

from numpy.testing._private.utils import assert_equal
from browser import Browser


class Test_generate_query(unittest.TestCase):
    buscador = Browser()

    def __init__(self, methodName: str = ...) -> None:
        super().__init__(methodName=methodName)
        self.maxDiff = None

    def test_Hotel_Categoria(self):

        results = self.buscador.generate_query(
            {
                "question": "Que hoteles  con categoria 2 o superior hay en Zaragoza",
                "intents": ["alojamientoCiudad", "tipoAlojamiento", "categoria"],
                "entities": ["Zaragoza", "hotel", "2"],
            }
        )
        self.assertEqual (results, 'SELECT  DISTINCT ?answer5 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i")  .  FILTER (?id like "%registro-alojamiento-hotelero%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')

    """def test_Hotel_Terraza(self):

        results =  self.buscador.generate_query(
        {
            "question": "Cuantas habitaciones con terraza tiene el hotel SOMMOS HOTEL BENASQUE",
            "intents": [
                "habitacionesTerrazaHotel",
                "tipoAlojamiento",
                "tipoHabitacion",
            ],
            "entities": ["SOMMOS HOTEL BENASQUE", "hotel"],
        }
        )
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"S[oóOÓ]MM[oóOÓ]S H[oóOÓ]T[eéEÉ]L B[eéEÉ]N[aáAÁ]SQ[uúUÚ][eéEÉ]\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#profile> ?profile . ?profile <http://harmonet.org/harmonise#profileField> ?profileField . ?profileField <http://harmonet.org/harmonise#fieldName> 'Número de habitaciones con terraza'  . ?profileField <http://harmonet.org/harmonise#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_hotelero . }")"""


    def test_comarca(self):
       results =  self.buscador.generate_query({"question":"A qué comarca pertenece el municipio Teruel","intents":["ComarcaMunicipio"], "entities":["Teruel"]} )
       self.assertEqual(results, "PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2av2#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?municipio aragopedia:enComarca ?comarca . ?municipio rdfs:label ?etiqueta filter REGEX(lcase(REPLACE(str(?etiqueta),\"_\",\" \")), \"T[eéEÉ]r[uúUÚ][eéEÉ]l\", \"i\")   . ?comarca rdfs:label ?answer0 . }")

    def test_superficie(self):
       results =  self.buscador.generate_query({"question": "Cuál es la superficie de Zaragoza", "intents": ["SuperficieMunicipio"], "entities": ["Zaragoza"]})
       self.assertEqual(results, "PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2av2#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?municipio aragopedia:areaTotal ?answer0 . ?municipio rdfs:label ?etiqueta filter REGEX(lcase(REPLACE(str(?etiqueta),\"_\",\" \")), \"Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]\", \"i\")   . }")

    def test_Habitantes(self):
       results =  self.buscador.generate_query({"question": "Cuántos habitantes hay en Añon", "intents": ["HabitantesMunicipio"], "entities": ["Añon"]})
       self.assertEqual(results, "PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2av2#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?answer1 ?etiqueta WHERE { ?municipio aragopedia:menPopulation ?answer0 . ?municipio aragopedia:womenPopulation ?answer1 . ?municipio rdfs:label ?etiqueta filter REGEX(lcase(REPLACE(str(?etiqueta),\"_\",\" \")), \"[aáAÁ]ñ[oóOÓ]n\", \"i\")   . }")

    def test_Secano(self):
       results =  self.buscador.generate_query({"question": "Cuál es la superficie total de secano en Zaragoza en el año 2006", "intents": ["SuperficieSecano", "Year"], "entities": ["Zaragoza", "2006"]})
       self.assertEqual(results, "PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2av2#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?municipio aragopedia:hasObservation ?observacion . ?municipio rdfs:label ?etiqueta filter REGEX(lcase(REPLACE(str(?etiqueta),\"_\",\" \")), \"Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]\", \"i\")   . ?observacion aragopedia:hectareasCultivosSecano ?answer0 . ?observacion aragopedia:year ?fecha filter REGEX(lcase(REPLACE(str(?fecha),\"_\",\" \")), \"2006\", \"i\")   . }")

    def test_regadio(self):
       results =  self.buscador.generate_query({"question": "Cuál es la superficie total de regadío en Zaragoza en el año 2006", "intents": ["SuperficieRegadio", "Year"], "entities": ["Zaragoza", "2006"]})
       self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2av2#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?municipio aragopedia:hasObservation ?observacion . ?municipio rdfs:label ?etiqueta filter REGEX(lcase(REPLACE(str(?etiqueta),\"_\",\" \")), \"Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]\", \"i\")   . ?observacion aragopedia:hectareasCultivosRegadio ?answer0 . ?observacion aragopedia:year ?fecha filter REGEX(lcase(REPLACE(str(?fecha),\"_\",\" \")), \"2006\", \"i\")   . }")

    def test_poblacion(self):
       results =  self.buscador.generate_query({"question": "Cuál era la población de Añon en el año 2019", "intents": ["Poblacion", "Year"], "entities": ["Añon", "2019"]})
       self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2av2#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?municipio <http://purl.org/linked-data/sdmx/2009/dimension#refArea> ?etiqueta .  filter REGEX(lcase(REPLACE(str(?etiqueta),\"_\",\" \")), \"[aáAÁ]ñ[oóOÓ]n\", \"i\")   . ?municipio <http://opendata.aragon.es/def/iaest/medida#poblacion> ?answer0 . ?municipio <http://purl.org/linked-data/sdmx/2009/dimension#refPeriod> ?fecha .  filter REGEX(lcase(REPLACE(str(?fecha),\"_\",\" \")), \"2019\", \"i\")   . }")

    def test_cif_ayuntamiento(self):
       results =  self.buscador.generate_query({"question": "Cuál es el CIF del ayuntamiento de Zaragoza", "intents": ["CIFAyuntamiento"], "entities": ["Zaragoza"]})
       self.assertEqual(results,'SELECT DISTINCT ?municipio_org_identifier as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?municipio rdf:type org:Organization. ?municipio ns:wasUsedBy ?procedencia . ?procedencia ns:wasAssociatedWith <http://opendata.aragon.es/datos/catalogo/dataset/ga-od-core/11> . ?municipio org:hasSite ?org_hasSite. ?org_hasSite org:siteAddress ?org_siteAddress . ?municipio org:identifier ?municipio_org_identifier . ?org_siteAddress vcard:locality ?etiqueta . filter REGEX(lcase(REPLACE(str(?etiqueta ),"_"," ")), "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i") }')

    def test_tlf_ayuntamiento(self):
       results =  self.buscador.generate_query({"question": "Cuál es el teléfono del ayuntamiento de Zaragoza", "intents": ["TelefonoAyuntamiento"], "entities": ["Zaragoza"]})
       self.assertEqual(results, 'SELECT DISTINCT ?org_siteAddress_vcard_tel as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?municipio rdf:type org:Organization. ?municipio ns:wasUsedBy ?procedencia . ?procedencia ns:wasAssociatedWith <http://opendata.aragon.es/datos/catalogo/dataset/ga-od-core/11> . ?municipio org:hasSite ?org_hasSite. ?org_hasSite org:siteAddress ?org_siteAddress . ?org_siteAddress vcard:tel ?org_siteAddress_vcard_tel . ?org_siteAddress vcard:locality ?etiqueta . filter REGEX(lcase(REPLACE(str(?etiqueta ),"_"," ")), "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i") }')

    def test_email_ayuntamiento(self):
       results =  self.buscador.generate_query({"question": "Cuál es el email del ayuntamiento de Zaragoza", "intents": ["EmailAyuntamiento"], "entities": ["Zaragoza"]})
       self.assertEqual(results,'SELECT DISTINCT ?org_siteAddress_vcard_email as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?municipio rdf:type org:Organization. ?municipio ns:wasUsedBy ?procedencia . ?procedencia ns:wasAssociatedWith <http://opendata.aragon.es/datos/catalogo/dataset/ga-od-core/11> . ?municipio org:hasSite ?org_hasSite. ?org_hasSite org:siteAddress ?org_siteAddress . ?org_siteAddress vcard:email ?org_siteAddress_vcard_email . ?org_siteAddress vcard:locality ?etiqueta . filter REGEX(lcase(REPLACE(str(?etiqueta ),"_"," ")), "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i") }')

    def test_alcalde_ayuntamiento(self):
       results =  self.buscador.generate_query({"question": "Quién es el alcalde del municipio de Zaragoza", "intents": ["Cargo", "Municipio"], "entities": ["Alcalde", "Zaragoza"]})
       self.assertEqual(results,'select ?answer as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?alcalde foaf:name ?answer . ?alcalde org:holds ?cargo . ?cargo org:role ?cargo2 . ?cargo2 dc:title "ALCALDE" . ?cargo org:postIn ?municipio . ?municipio dc:title ?etiqueta filter REGEX(lcase(REPLACE(str(?etiqueta),"_"," ")), "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i") }')

    def test_concejales_ayuntamiento(self):
       results =  self.buscador.generate_query({"question": "Quiénes son los concejales del municipio de Zaragoza", "intents": ["Cargo", "Municipio"], "entities": ["Concejal", "Zaragoza"]})
       self.assertEqual(results,'select ?answer as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?alcalde foaf:name ?answer . ?alcalde org:holds ?cargo . ?cargo org:role ?cargo2 . ?cargo2 dc:title "CONCEJAL" . ?cargo org:postIn ?municipio . ?municipio dc:title ?etiqueta filter REGEX(lcase(REPLACE(str(?etiqueta),"_"," ")), "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i") }')

    def test_fax_ayuntamiento(self):
        results =  self.buscador.generate_query({"question": "Cuál es el fax del ayuntamiento de Zaragoza", "intents": ["FaxAyuntamiento"],"entities": ["Zaragoza"]})
        self.assertEqual(results,'SELECT DISTINCT ?org_siteAddress_vcard_fax as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?municipio rdf:type org:Organization. ?municipio ns:wasUsedBy ?procedencia . ?procedencia ns:wasAssociatedWith <http://opendata.aragon.es/datos/catalogo/dataset/ga-od-core/11> . ?municipio org:hasSite ?org_hasSite. ?org_hasSite org:siteAddress ?org_siteAddress . ?org_siteAddress vcard:fax ?org_siteAddress_vcard_fax . ?org_siteAddress vcard:locality ?etiqueta . filter REGEX(lcase(REPLACE(str(?etiqueta ),"_"," ")), "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i") }')

    def test_address_ayuntamiento(self):
        results =  self.buscador.generate_query({"question": "Cuál es la dirección del ayuntamiento de Zaragoza", "intents": ["DireccionAyuntamiento"], "entities": ["Zaragoza"]})
        self.assertEqual(results,'SELECT DISTINCT ?org_siteAddress_vcard_street_address as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?municipio rdf:type org:Organization. ?municipio ns:wasUsedBy ?procedencia . ?procedencia ns:wasAssociatedWith <http://opendata.aragon.es/datos/catalogo/dataset/ga-od-core/11> . ?municipio org:hasSite ?org_hasSite. ?org_hasSite org:siteAddress ?org_siteAddress . ?org_siteAddress vcard:street-address ?org_siteAddress_vcard_street_address . ?org_siteAddress vcard:locality ?etiqueta . filter REGEX(lcase(REPLACE(str(?etiqueta ),"_"," ")), "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i") }')

    # Gastronomía
    def test_restaurant_tlf(self):
        results = self.buscador.generate_query(
        {"question": "Cuál es el telefono del restaurante/cafetería Ginos Grancasa", "intents": ["telefonoRestaurante"],
                      "entities": ["Ginos Grancasa"]})
        self.assertEqual(results,'SELECT DISTINCT ?org_siteAddress_vcard_tel as ?answer0 ?registro_cafeteria_restaurante_dc_title as ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?registro_cafeteria_restaurante rdf:type org:Organization. OPTIONAL {?registro_cafeteria_restaurante dc:identifier ?registro_cafeteria_restaurante_dc_identifier . } OPTIONAL {?registro_cafeteria_restaurante dc:title ?registro_cafeteria_restaurante_dc_title . } OPTIONAL {?registro_cafeteria_restaurante dc:description ?registro_cafeteria_restaurante_dc_description . } OPTIONAL {?registro_cafeteria_restaurante foaf:homepage ?registro_cafeteria_restaurante_foaf_homepage . } OPTIONAL {?registro_cafeteria_restaurante dc:date ?registro_cafeteria_restaurante_dc_date . } OPTIONAL {?registro_cafeteria_restaurante org:classification ?registro_cafeteria_restaurante_org_classification . } OPTIONAL {?registro_cafeteria_restaurante org:linkedTo ?registro_cafeteria_restaurante_org_linkedTo . } OPTIONAL {?registro_cafeteria_restaurante org:hasSite ?org_hasSite . } OPTIONAL {?org_hasSite org:siteAddress ?org_siteAddress . } OPTIONAL {?org_siteAddress vcard:street-address ?org_siteAddress_vcard_street_address . } OPTIONAL {?org_siteAddress vcard:postal-code ?org_siteAddress_vcard_postal_code . } OPTIONAL {?org_siteAddress vcard:tel ?org_siteAddress_vcard_tel . } OPTIONAL {?org_siteAddress vcard:fax ?org_siteAddress_vcard_fax . } OPTIONAL {?org_siteAddress vcard:email ?org_siteAddress_vcard_email . } FILTER (?registro_cafeteria_restaurante like "%registro-cafeteria%") .  FILTER regex(?registro_cafeteria_restaurante_dc_title, "G[iíIÍ]n[oóOÓ]s Gr[aáAÁ]nc[aáAÁ]s[aáAÁ]", "i") . }')

    def test_restaurant_fax(self):
        results = self.buscador.generate_query(
        {"question": "Cuál es el fax del restaurante/cafetería Ginos Grancasa", "intents": ["faxRestaurante"],
        "entities": ["Pista Grande"]})
        self.assertEqual(results,'SELECT DISTINCT ?org_siteAddress_vcard_fax as ?answer0 ?registro_cafeteria_restaurante_dc_title as ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?registro_cafeteria_restaurante rdf:type org:Organization. OPTIONAL {?registro_cafeteria_restaurante dc:identifier ?registro_cafeteria_restaurante_dc_identifier . } OPTIONAL {?registro_cafeteria_restaurante dc:title ?registro_cafeteria_restaurante_dc_title . } OPTIONAL {?registro_cafeteria_restaurante dc:description ?registro_cafeteria_restaurante_dc_description . } OPTIONAL {?registro_cafeteria_restaurante foaf:homepage ?registro_cafeteria_restaurante_foaf_homepage . } OPTIONAL {?registro_cafeteria_restaurante dc:date ?registro_cafeteria_restaurante_dc_date . } OPTIONAL {?registro_cafeteria_restaurante org:classification ?registro_cafeteria_restaurante_org_classification . } OPTIONAL {?registro_cafeteria_restaurante org:linkedTo ?registro_cafeteria_restaurante_org_linkedTo . } OPTIONAL {?registro_cafeteria_restaurante org:hasSite ?org_hasSite . } OPTIONAL {?org_hasSite org:siteAddress ?org_siteAddress . } OPTIONAL {?org_siteAddress vcard:street-address ?org_siteAddress_vcard_street_address . } OPTIONAL {?org_siteAddress vcard:postal-code ?org_siteAddress_vcard_postal_code . } OPTIONAL {?org_siteAddress vcard:tel ?org_siteAddress_vcard_tel . } OPTIONAL {?org_siteAddress vcard:fax ?org_siteAddress_vcard_fax . } OPTIONAL {?org_siteAddress vcard:email ?org_siteAddress_vcard_email . } FILTER (?registro_cafeteria_restaurante like "%registro-cafeteria%") .  FILTER regex(?registro_cafeteria_restaurante_dc_title, "P[iíIÍ]st[aáAÁ] Gr[aáAÁ]nd[eéEÉ]", "i") . }')

    def test_restaurant_email(self):
        results = self.buscador.generate_query(
        {"question": "Cuál es el email del restaurante/cafetería Ginos Grancasa", "intents": ["emailRestaurante"],
        "entities": ["Ginos Grancasa"]})
        self.assertEqual(results,'SELECT DISTINCT ?org_siteAddress_vcard_email as ?answer0 ?registro_cafeteria_restaurante_dc_title as ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?registro_cafeteria_restaurante rdf:type org:Organization. OPTIONAL {?registro_cafeteria_restaurante dc:identifier ?registro_cafeteria_restaurante_dc_identifier . } OPTIONAL {?registro_cafeteria_restaurante dc:title ?registro_cafeteria_restaurante_dc_title . } OPTIONAL {?registro_cafeteria_restaurante dc:description ?registro_cafeteria_restaurante_dc_description . } OPTIONAL {?registro_cafeteria_restaurante foaf:homepage ?registro_cafeteria_restaurante_foaf_homepage . } OPTIONAL {?registro_cafeteria_restaurante dc:date ?registro_cafeteria_restaurante_dc_date . } OPTIONAL {?registro_cafeteria_restaurante org:classification ?registro_cafeteria_restaurante_org_classification . } OPTIONAL {?registro_cafeteria_restaurante org:linkedTo ?registro_cafeteria_restaurante_org_linkedTo . } OPTIONAL {?registro_cafeteria_restaurante org:hasSite ?org_hasSite . } OPTIONAL {?org_hasSite org:siteAddress ?org_siteAddress . } OPTIONAL {?org_siteAddress vcard:street-address ?org_siteAddress_vcard_street_address . } OPTIONAL {?org_siteAddress vcard:postal-code ?org_siteAddress_vcard_postal_code . } OPTIONAL {?org_siteAddress vcard:tel ?org_siteAddress_vcard_tel . } OPTIONAL {?org_siteAddress vcard:fax ?org_siteAddress_vcard_fax . } OPTIONAL {?org_siteAddress vcard:email ?org_siteAddress_vcard_email . } FILTER (?registro_cafeteria_restaurante like "%registro-cafeteria%") .  FILTER regex(?registro_cafeteria_restaurante_dc_title, "G[iíIÍ]n[oóOÓ]s Gr[aáAÁ]nc[aáAÁ]s[aáAÁ]", "i") . }')

    def test_restaurant_web(self):
        results = self.buscador.generate_query(
        {"question": "Cuál es la pagina web del restaurante/cafetería Ginos Grancasa", "intents": ["webRestaurante"],
          "entities": ["MUERDE LA PASTA - GRANCASA"]})
        self.assertEqual(results,'SELECT DISTINCT ?registro_cafeteria_restaurante_foaf_homepage as ?answer0 ?registro_cafeteria_restaurante_dc_title as ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?registro_cafeteria_restaurante rdf:type org:Organization. OPTIONAL {?registro_cafeteria_restaurante dc:identifier ?registro_cafeteria_restaurante_dc_identifier . } OPTIONAL {?registro_cafeteria_restaurante dc:title ?registro_cafeteria_restaurante_dc_title . } OPTIONAL {?registro_cafeteria_restaurante dc:description ?registro_cafeteria_restaurante_dc_description . } OPTIONAL {?registro_cafeteria_restaurante foaf:homepage ?registro_cafeteria_restaurante_foaf_homepage . } OPTIONAL {?registro_cafeteria_restaurante dc:date ?registro_cafeteria_restaurante_dc_date . } OPTIONAL {?registro_cafeteria_restaurante org:classification ?registro_cafeteria_restaurante_org_classification . } OPTIONAL {?registro_cafeteria_restaurante org:linkedTo ?registro_cafeteria_restaurante_org_linkedTo . } OPTIONAL {?registro_cafeteria_restaurante org:hasSite ?org_hasSite . } OPTIONAL {?org_hasSite org:siteAddress ?org_siteAddress . } OPTIONAL {?org_siteAddress vcard:street-address ?org_siteAddress_vcard_street_address . } OPTIONAL {?org_siteAddress vcard:postal-code ?org_siteAddress_vcard_postal_code . } OPTIONAL {?org_siteAddress vcard:tel ?org_siteAddress_vcard_tel . } OPTIONAL {?org_siteAddress vcard:fax ?org_siteAddress_vcard_fax . } OPTIONAL {?org_siteAddress vcard:email ?org_siteAddress_vcard_email . } FILTER (?registro_cafeteria_restaurante like "%registro-cafeteria%") .  FILTER regex(?registro_cafeteria_restaurante_dc_title, "M[uúUÚ][eéEÉ]RD[eéEÉ] L[aáAÁ] P[aáAÁ]ST[aáAÁ] - GR[aáAÁ]NC[aáAÁ]S[aáAÁ]", "i") . }')

    def test_restaurant_address(self):
        results = self.buscador.generate_query({"question": "Cuál es la direccion del restaurante/cafetería Ginos Grancasa", "intents": ["direccionRestaurante"],
          "entities": ["Ginos Grancasa"]})
        self.assertEqual(results,'SELECT DISTINCT ?org_siteAddress_vcard_street_address as ?answer0 ?org_siteAddress_vcard_postal_code as ?answer1  ?registro_cafeteria_restaurante_dc_title as ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?registro_cafeteria_restaurante rdf:type org:Organization. OPTIONAL {?registro_cafeteria_restaurante dc:identifier ?registro_cafeteria_restaurante_dc_identifier . } OPTIONAL {?registro_cafeteria_restaurante dc:title ?registro_cafeteria_restaurante_dc_title . } OPTIONAL {?registro_cafeteria_restaurante dc:description ?registro_cafeteria_restaurante_dc_description . } OPTIONAL {?registro_cafeteria_restaurante foaf:homepage ?registro_cafeteria_restaurante_foaf_homepage . } OPTIONAL {?registro_cafeteria_restaurante dc:date ?registro_cafeteria_restaurante_dc_date . } OPTIONAL {?registro_cafeteria_restaurante org:classification ?registro_cafeteria_restaurante_org_classification . } OPTIONAL {?registro_cafeteria_restaurante org:linkedTo ?registro_cafeteria_restaurante_org_linkedTo . } OPTIONAL {?registro_cafeteria_restaurante org:hasSite ?org_hasSite . } OPTIONAL {?org_hasSite org:siteAddress ?org_siteAddress . } OPTIONAL {?org_siteAddress vcard:street-address ?org_siteAddress_vcard_street_address . } OPTIONAL {?org_siteAddress vcard:postal-code ?org_siteAddress_vcard_postal_code . } OPTIONAL {?org_siteAddress vcard:tel ?org_siteAddress_vcard_tel . } OPTIONAL {?org_siteAddress vcard:fax ?org_siteAddress_vcard_fax . } OPTIONAL {?org_siteAddress vcard:email ?org_siteAddress_vcard_email . } FILTER (?registro_cafeteria_restaurante like "%registro-cafeteria%") .  FILTER regex(?registro_cafeteria_restaurante_dc_title, "G[iíIÍ]n[oóOÓ]s Gr[aáAÁ]nc[aáAÁ]s[aáAÁ]", "i") . }')

    def test_restaurant_ciudad(self):
        results = self. buscador.generate_query(
        {"question": "Restaurantes/cafeterías en Zaragoza", "intents": ["restaurantesCiudad"],
        "entities": ["Zaragoza"]})
        self.assertEqual(len(results),337)

    """def test_restaurant_plazas(self):
        results = self.buscador.generate_query(
        {"question": "Cuantas plazas tiene el restaurante Ginos Grancasa", "intents": ["plazasRestaurante"],
          "entities": ["Ginos Grancasa"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?restaurant ?aux0 ei2a:cafeteria_restaurante . ?restaurant ei2a:organizationName ?etiqueta. filter REGEX(?etiqueta, \"G[iíIÍ]n[oóOÓ]s Gr[aáAÁ]nc[aáAÁ]s[aáAÁ]\", \"i\") . ?restaurant <http://harmonet.org/harmonise#profile> ?profile . ?profile <http://harmonet.org/harmonise#profileField> ?profileField . ?profileField <http://harmonet.org/harmonise#fieldName> ?fieldName .  filter REGEX(?fieldName, \"N[uúUÚ]m[eéEÉ]r[oóOÓ] d[eéEÉ] pl[aáAÁ]z[aáAÁ]s\", \"i\") . ?profileField <http://harmonet.org/harmonise#fieldValue> ?answer0 .  filter REGEX(?profileField, \"places\", \"i\") .}")"""



    def test_restaurant_numero(self):
        results = self.buscador.generate_query(
        {"question": "Restaurantes en el municipio Zaragoza", "intents": ["numRestaurantes"],
         "entities": ["Zaragoza"]})
        self.assertEqual(len(results),354)


    def test_restaurant_municipio(self):
        results = self.buscador.generate_query(
            {"question": "Ciudad del restaurante Ginos Grancasa", "intents": ["municipioRestaurante"],
            "entities": ["GINOS GRANCASA"]})
        self.assertEqual(len(results),395)


    # Actividades

    """def test_actividades_obras(self):
        results = self.buscador.generate_query(
        {"question": "Que obras tiene el museo diocesano de Jaca", "intents": ["obrasMuseo"],
        "entities": ["Museo Diocesano de Jaca"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?museo ?aux0 ei2a:colecciones_museos_aragon. ?museo ei2a:isOfInterestTo ?obras . ?obras ei2a:organizationName ?etiqueta. filter REGEX(?etiqueta, \"M[uúUÚ]s[eéEÉ][oóOÓ] D[iíIÍ][oóOÓ]c[eéEÉ]s[aáAÁ]n[oóOÓ] d[eéEÉ] J[aáAÁ]c[aáAÁ]\", \"i\") . ?museo ei2a:nameDocument ?answer0 . }")"""


    def test_actividades_museos(self):
        results = self.buscador.generate_query(
        {"question": "Que museos hay en Zaragoza", "intents": ["museosLocalidad"],
                      "entities": ["Zaragoza"]})
        self.assertEqual(results,'select ?answer0 ?etiqueta from <http://opendata.aragon.es/def/ei2av2> where {  ?id rdf:type org:Organization FILTER (?id like "%cultura-ocio/organizacion/museo%") . ?id<http://www.w3.org/ns/org#linkedTo> ?municipio FILTER (?municipio like "%municipio%") . ?municipio <http://purl.org/dc/elements/1.1/title> ?etiqueta . FILTER REGEX(?etiqueta, "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i") . ?id dc:title ?answer0 . }')


    """def test_actividades_obra_lugar(self):
        results = self.buscador.generate_query(
         {"question": "Donde se encuentra la obra Abrazo en la puerta dorada", "intents": ["municipioObra"],
                      "entities": ["Abrazo en la puerta dorada"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?museo ?aux0 ei2a:colecciones_museos_aragon. ?museo ei2a:isOfInterestTo ?obras . ?obras ei2a:organizationName ?answer0. ?museo ei2a:nameDocument ?etiqueta .  filter REGEX(?etiqueta, \"[aáAÁ]br[aáAÁ]z[oóOÓ] [eéEÉ]n l[aáAÁ] p[uúUÚ][eéEÉ]rt[aáAÁ] d[oóOÓ]r[aáAÁ]d[aáAÁ]\", \"i\") . }")"""



    """def test_actividades_rutas_origen(self):
        results = self.buscador.generate_query(
        {"question": "Que rutas salen de Fraga", "intents": ["rutasOrigen"],
                      "entities": ["Teruel"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?ruta ?aux0 ei2a:ruta . ?ruta <http://vocab.gtfs.org/terms#originStop> ?origen . ?origen <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?location . ?location ei2a:organizationName ?etiqueta.  filter REGEX(?etiqueta, \"T[eéEÉ]r[uúUÚ][eéEÉ]l\", \"i\") . ?ruta <http://purl.org/dc/elements/1.1/title> ?answer0 . }")"""


    """def test_actividades_rutas_destino(self):
        results = self.buscador.generate_query(
         {"question": "Que rutas llegan a Borja", "intents": ["rutasDestino"],
                      "entities": ["Borja"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?ruta ?aux0 ei2a:ruta . ?ruta <http://vocab.gtfs.org/terms#destinationStop> ?destino . ?destino <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?location . ?location ei2a:organizationName ?etiqueta.  filter REGEX(?etiqueta, \"B[oóOÓ]rj[aáAÁ]\", \"i\") . ?ruta <http://purl.org/dc/elements/1.1/title> ?answer0 . }")"""


    def test_actividades_rutas_camino(self):
        results = self.buscador.generate_query(
         {"question": "Que rutas pasan por Utebo", "intents": ["rutasCamino"],
                      "entities": ["Utebo"]})
        self.assertEqual(results,'SELECT DISTINCT ?description as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> { ?id rdf:type vcard:Location FILTER (?id like "%/turismo/lugar/ruta%") . ?id vcard:fn ?etiqueta . ?id vcard:note ?description . FILTER REGEX(?description, "[uúUÚ]t[eéEÉ]b[oóOÓ]", "i")}')


    """def test_actividades_rutas_origen_destino(self):
        results = self.buscador.generate_query(
         {"question": "Que rutas salen de Teruel y llega a Zaragoza", "intents": ["rutasOrigen", "rutasDestino"],
                      "entities": ["Teruel", "Zaragoza"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?ruta ?aux0 ei2a:ruta . ?ruta <http://vocab.gtfs.org/terms#originStop> ?origen . ?origen <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?location . ?location ei2a:organizationName ?etiqueta.  filter REGEX(?etiqueta, \"T[eéEÉ]r[uúUÚ][eéEÉ]l\", \"i\") . ?ruta <http://purl.org/dc/elements/1.1/title> ?answer0 . ?ruta <http://vocab.gtfs.org/terms#destinationStop> ?destino . ?destino <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?location2 . ?location2 ei2a:organizationName ?etiqueta2.  filter REGEX(?etiqueta2, \"Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]\", \"i\") . }")"""


    """def test_actividades_rutas_guias(self):
        results = self.buscador.generate_query(
         {"question": "Que guías de turismo hay en Borja", "intents": ["guiasLocalidad"],
                      "entities": ["Borja"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?guia ?aux0 ei2a:guia_turismo . ?guia <location> ?location . ?location ei2a:organizationName ?etiqueta .  filter REGEX(?etiqueta, \"B[oóOÓ]rj[aáAÁ]\", \"i\") . ?guia ei2a:fullName ?answer0 . }")"""


    def test_actividades_rutas_guias_tlf(self):
        results = self.buscador.generate_query(
        {"question": "Cual es el telefono del guia de turismo RAMOS MONGE DIEGO", "intents": ["telefonoGuia"],
                     "entities": ["RAMOS MONGE DIEGO"]})
        self.assertEqual(results,'SELECT DISTINCT ?org_siteAddress_vcard_tel as ?answer0 ?registro_guia_turismo_dc_title as ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?registro_guia_turismo rdf:type org:Organization. ?registro_guia_turismo ns:wasUsedBy ?procedencia. ?procedencia ns:wasAssociatedWith <http://opendata.aragon.es/datos/catalogo/dataset/ga-od-core/69>. OPTIONAL {?registro_guia_turismo dc:identifier ?registro_guia_turismo_dc_identifier.} OPTIONAL {?registro_guia_turismo dc:title ?registro_guia_turismo_dc_title.} OPTIONAL {?registro_guia_turismo foaf:homepage ?registro_guia_turismo_foaf_homepage.} OPTIONAL {?registro_guia_turismo org:classification ?registro_guia_turismo_org_classification.} OPTIONAL {?registro_guia_turismo org:hasSite ?org_hasSite.} OPTIONAL {?org_hasSite org:siteAddress ?org_siteAddress.} OPTIONAL {?org_siteAddress vcard:tel ?org_siteAddress_vcard_tel.} OPTIONAL {?org_siteAddress vcard:email ?org_siteAddress_vcard_email.}  FILTER regex(?registro_guia_turismo_dc_title, "R[aáAÁ]M[oóOÓ]S M[oóOÓ]NG[eéEÉ] D[iíIÍ][eéEÉ]G[oóOÓ]", "i") . }')


    def test_actividades_rutas_guias_email(self):
        results = self. buscador.generate_query(
        {"question": "Cual es el email del guia de turismo RAMOS MONGE DIEGO", "intents": ["emailGuia"],
                     "entities": ["RAMOS MONGE DIEGO"]})
        self.assertEqual(results,'SELECT DISTINCT ?org_siteAddress_vcard_email as ?answer0 ?registro_guia_turismo_dc_title as ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?registro_guia_turismo rdf:type org:Organization. ?registro_guia_turismo ns:wasUsedBy ?procedencia. ?procedencia ns:wasAssociatedWith <http://opendata.aragon.es/datos/catalogo/dataset/ga-od-core/69>. OPTIONAL {?registro_guia_turismo dc:identifier ?registro_guia_turismo_dc_identifier.} OPTIONAL {?registro_guia_turismo dc:title ?registro_guia_turismo_dc_title.} OPTIONAL {?registro_guia_turismo foaf:homepage ?registro_guia_turismo_foaf_homepage.} OPTIONAL {?registro_guia_turismo org:classification ?registro_guia_turismo_org_classification.} OPTIONAL {?registro_guia_turismo org:hasSite ?org_hasSite.} OPTIONAL {?org_hasSite org:siteAddress ?org_siteAddress.} OPTIONAL {?org_siteAddress vcard:tel ?org_siteAddress_vcard_tel.} OPTIONAL {?org_siteAddress vcard:email ?org_siteAddress_vcard_email.}  FILTER regex(?registro_guia_turismo_dc_title, "R[aáAÁ]M[oóOÓ]S M[oóOÓ]NG[eéEÉ] D[iíIÍ][eéEÉ]G[oóOÓ]", "i") . }')


    def test_actividades_guias_web(self):
        results = self.buscador.generate_query(
        {"question": "Cual es la web del guia de turismo SOLANAS AÍSA BLANCA", "intents": ["webGuia"],
                     "entities": ["SOLANAS AÍSA BLANCA"]})
        self.assertEqual(results,'SELECT DISTINCT ?registro_guia_turismo_foaf_homepage as ?answer0 ?registro_guia_turismo_dc_title as ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?registro_guia_turismo rdf:type org:Organization. ?registro_guia_turismo ns:wasUsedBy ?procedencia. ?procedencia ns:wasAssociatedWith <http://opendata.aragon.es/datos/catalogo/dataset/ga-od-core/69>. OPTIONAL {?registro_guia_turismo dc:identifier ?registro_guia_turismo_dc_identifier.} OPTIONAL {?registro_guia_turismo dc:title ?registro_guia_turismo_dc_title.} OPTIONAL {?registro_guia_turismo foaf:homepage ?registro_guia_turismo_foaf_homepage.} OPTIONAL {?registro_guia_turismo org:classification ?registro_guia_turismo_org_classification.} OPTIONAL {?registro_guia_turismo org:hasSite ?org_hasSite.} OPTIONAL {?org_hasSite org:siteAddress ?org_siteAddress.} OPTIONAL {?org_siteAddress vcard:tel ?org_siteAddress_vcard_tel.} OPTIONAL {?org_siteAddress vcard:email ?org_siteAddress_vcard_email.}  FILTER regex(?registro_guia_turismo_dc_title, "S[oóOÓ]L[aáAÁ]N[aáAÁ]S [aáAÁ][iíIÍ]S[aáAÁ] BL[aáAÁ]NC[aáAÁ]", "i") . }')


    # test que falla si el nombre del guia no se introduce exactamente igual que esta en la base de datos "2 espacios en blanco" correctamente
    def test_actividades_guias_contacto(self):
        results = self.buscador.generate_query(
        {"question": "Cual es la informacion de contacto del guia turistico AMBROJ  MARTÍN MARÍA JESÚS", "intents": ["informacionGuia"],
                     "entities": ["AMBROJ  MARTÍN MARÍA JESÚS"]})
        self.assertEqual(results,'SELECT ?org_siteAddress_vcard_email as ?answer0 ?org_siteAddress_vcard_tel as ?answer1 ?registro_guia_turismo_foaf_homepage as ?answer2  ?registro_guia_turismo_dc_title as ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?registro_guia_turismo rdf:type org:Organization. ?registro_guia_turismo ns:wasUsedBy ?procedencia. ?procedencia ns:wasAssociatedWith <http://opendata.aragon.es/datos/catalogo/dataset/ga-od-core/69>. OPTIONAL {?registro_guia_turismo dc:identifier ?registro_guia_turismo_dc_identifier.} OPTIONAL {?registro_guia_turismo dc:title ?registro_guia_turismo_dc_title.} OPTIONAL {?registro_guia_turismo foaf:homepage ?registro_guia_turismo_foaf_homepage.} OPTIONAL {?registro_guia_turismo org:classification ?registro_guia_turismo_org_classification.} OPTIONAL {?registro_guia_turismo org:hasSite ?org_hasSite.} OPTIONAL {?org_hasSite org:siteAddress ?org_siteAddress.} OPTIONAL {?org_siteAddress vcard:tel ?org_siteAddress_vcard_tel.} OPTIONAL {?org_siteAddress vcard:email ?org_siteAddress_vcard_email.}  FILTER regex(?registro_guia_turismo_dc_title, "[aáAÁ]MBR[oóOÓ]J  M[aáAÁ]RT[iíIÍ]N M[aáAÁ]R[iíIÍ][aáAÁ] J[eéEÉ]S[uúUÚ]S", "i") . }')


    def test_actividades_guias_tlf(self):
        results = self.buscador.generate_query(
        {"question": "Cual es el telefono de la oficina de turismo de Teruel", "intents": ["telefonoTurismo"],
                     "entities": ["Teruel"]})
        self.assertEqual(results,'SELECT DISTINCT ?answer0 ?answer1 ?answer2 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . FILTER (?id like "%registro-punto-informacion-turistica%" || ?id like "%registro-oficina-turismo%") . ?id dc:title ?answer0 . ?id org:hasSite ?site . OPTIONAL {?id org:linkedTo ?etiqueta .} FILTER (REGEX(?answer0, "T[eéEÉ]r[uúUÚ][eéEÉ]l", "i")  || (?etiqueta like "%municipio%"  &&  REGEX(?etiqueta, "T[eéEÉ]r[uúUÚ][eéEÉ]l","i"))) . ?site org:siteAddress ?address . ?address vcard:street-address ?answer1 . ?site org:siteAddress ?address . ?address vcard:tel ?answer2 .}')


    def test_actividades_oficina_direccion(self):
        results = self.buscador.generate_query(
        {"question": "Donde esta la oficina de turismo de Zaragoza", "intents": ["direccionTurismo"],
                     "entities": ["Zaragoza"]})
        self.assertEqual(results,'SELECT DISTINCT ?answer0 ?answer1 ?answer2 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . FILTER (?id like "%registro-punto-informacion-turistica%" || ?id like "%registro-oficina-turismo%") . ?id dc:title ?answer0 . ?id org:hasSite ?site . OPTIONAL {?id org:linkedTo ?etiqueta .} FILTER (REGEX(?answer0, "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i")  || (?etiqueta like "%municipio%"  &&  REGEX(?etiqueta, "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]","i"))) . ?site org:siteAddress ?address . ?address vcard:street-address ?answer1 . ?site org:siteAddress ?address . ?address vcard:tel ?answer2 .}')


    #  Alojamientos

    def test_alojamientos_hotel_direccion(self):
        results = self.buscador.generate_query({"question": "Cual es el telefono del hotel HOTEL & SPA REAL VILLA ANAYET", "intents": ["telefonoAlojamiento", "tipoAlojamiento"],
                     "entities": ["HOTEL & SPA REAL VILLA ANAYET", "hotel"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer3 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "H[oóOÓ]T[eéEÉ]L & SP[aáAÁ] R[eéEÉ][aáAÁ]L V[iíIÍ]LL[aáAÁ] [aáAÁ]N[aáAÁ]Y[eéEÉ]T", "i")  .  FILTER (?id like "%registro-alojamiento-hotelero%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamientos_hotel_tlf(self):
        results = self.buscador.generate_query({"question": "Cual es el telefono del hotel HOTEL & SPA REAL VILLA ANAYET", "intents": ["telefonoAlojamiento", "tipoAlojamiento"],
                     "entities": ["HOTEL & SPA REAL VILLA ANAYET", "hotel"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer3 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "H[oóOÓ]T[eéEÉ]L & SP[aáAÁ] R[eéEÉ][aáAÁ]L V[iíIÍ]LL[aáAÁ] [aáAÁ]N[aáAÁ]Y[eéEÉ]T", "i")  .  FILTER (?id like "%registro-alojamiento-hotelero%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamientos_albergue_tlf(self):
        results = self.buscador.generate_query({"question": "Cual es el telefono del albergue FUNDACION ASISTENCIAL ATADES HUESCA",
                     "intents": ["telefonoAlojamiento", "tipoAlojamiento"],
                     "entities": ["FUNDACION ASISTENCIAL ATADES HUESCA", "albergue"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer3 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "F[uúUÚ]ND[aáAÁ]C[iíIÍ][oóOÓ]N [aáAÁ]S[iíIÍ]ST[eéEÉ]NC[iíIÍ][aáAÁ]L [aáAÁ]T[aáAÁ]D[eéEÉ]S H[uúUÚ][eéEÉ]SC[aáAÁ]", "i")  .  FILTER (?id like "%registro-albergue-refugio%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamientos_apartamento_tlf(self):
        results = self.buscador.generate_query({"question": "Cual es el telefono del apartamento APARTAMENTOS FORATATA",
                     "intents": ["telefonoAlojamiento", "tipoAlojamiento"],
                     "entities": ["APARTAMENTOS FORATATA", "apartamento"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer3 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "[aáAÁ]P[aáAÁ]RT[aáAÁ]M[eéEÉ]NT[oóOÓ]S F[oóOÓ]R[aáAÁ]T[aáAÁ]T[aáAÁ]", "i")  .  FILTER (?id like "%registro-apartamento-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamientos_casa_tlf(self):
        results = self.buscador.generate_query({"question": "Cual es el telefono de la casa rural CASA RURAL MONTE PERDIDO",
                     "intents": ["telefonoAlojamiento", "tipoAlojamiento"],
                     "entities": ["CASA RURAL MONTE PERDIDO", "casa rural"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer3 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "C[aáAÁ]S[aáAÁ] R[uúUÚ]R[aáAÁ]L M[oóOÓ]NT[eéEÉ] P[eéEÉ]RD[iíIÍ]D[oóOÓ]", "i")  .  FILTER (?id like "%registro-alojamientos-turismo-rural%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamientos_camping_tlf(self):
        results = self.buscador.generate_query({"question": "Cual es el telefono del camping CAMPING PINETA, S.L.-PINETA",
                     "intents": ["telefonoAlojamiento", "tipoAlojamiento"],
                     "entities": ["CAMPING PINETA, S.L.-PINETA", "camping"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer3 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "C[aáAÁ]MP[iíIÍ]NG P[iíIÍ]N[eéEÉ]T[aáAÁ], S.L.-P[iíIÍ]N[eéEÉ]T[aáAÁ]", "i")  .  FILTER (?id like "%registro-camping-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamientos_hotel_fax(self):
        results = self.buscador.generate_query({"question": "Cual es el fax del hotel HOTEL & SPA REAL VILLA ANAYET", "intents": ["faxAlojamiento", "tipoAlojamiento"],
                     "entities": ["HOTEL & SPA REAL VILLA ANAYET", "hotel"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer6 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "H[oóOÓ]T[eéEÉ]L & SP[aáAÁ] R[eéEÉ][aáAÁ]L V[iíIÍ]LL[aáAÁ] [aáAÁ]N[aáAÁ]Y[eéEÉ]T", "i")  .  FILTER (?id like "%registro-alojamiento-hotelero%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamientos_albergue_fax(self):
        results = self.buscador.generate_query({"question": "Cual es el fax del albergue EXPLOTACIONES HOTELERAS VILLANUA, S.L.",
                     "intents": ["faxAlojamiento", "tipoAlojamiento"],
                     "entities": ["EXPLOTACIONES HOTELERAS VILLANUA, S.L.", "albergue"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer6 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "[eéEÉ]XPL[oóOÓ]T[aáAÁ]C[iíIÍ][oóOÓ]N[eéEÉ]S H[oóOÓ]T[eéEÉ]L[eéEÉ]R[aáAÁ]S V[iíIÍ]LL[aáAÁ]N[uúUÚ][aáAÁ], S.L.", "i")  .  FILTER (?id like "%registro-albergue-refugio%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamientos_apartamento_fax(self):
        results = self.buscador.generate_query({"question": "Cual es el fax del apartamento BALCÓN DEL PIRINEO RURAL ORDESA",
                     "intents": ["faxAlojamiento", "tipoAlojamiento"],
                     "entities": ["BALCÓN DEL PIRINEO RURAL ORDESA", "apartamento"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer6 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "B[aáAÁ]LC[oóOÓ]N D[eéEÉ]L P[iíIÍ]R[iíIÍ]N[eéEÉ][oóOÓ] R[uúUÚ]R[aáAÁ]L [oóOÓ]RD[eéEÉ]S[aáAÁ]", "i")  .  FILTER (?id like "%registro-apartamento-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamientos_casa_fax(self):
        results = self.buscador.generate_query({"question": "Cual es el fax de la casa rural CASA ARBOLEDA-LAFUENTE",
                     "intents": ["faxAlojamiento", "tipoAlojamiento"],
                     "entities": ["CASA ARBOLEDA-LAFUENTE", "casa rural"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer6 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "C[aáAÁ]S[aáAÁ] [aáAÁ]RB[oóOÓ]L[eéEÉ]D[aáAÁ]-L[aáAÁ]F[uúUÚ][eéEÉ]NT[eéEÉ]", "i")  .  FILTER (?id like "%registro-alojamientos-turismo-rural%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')



    def test_alojamientos_camping_fax(self):
        results = self.buscador.generate_query({"question": "Cual es el fax del camping CAMPING LECINA, S.C.-LECINA",
                     "intents": ["faxAlojamiento", "tipoAlojamiento"],
                     "entities": ["CAMPING LECINA, S.C.-LECINA", "camping"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer6 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "C[aáAÁ]MP[iíIÍ]NG L[eéEÉ]C[iíIÍ]N[aáAÁ], S.C.-L[eéEÉ]C[iíIÍ]N[aáAÁ]", "i")  .  FILTER (?id like "%registro-camping-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    """def test_alojamientos_camping_web(self):
        results = self.buscador.generate_query({"question": "Cual es la página web del hotel HOTEL & SPA REAL VILLA ANAYET", "intents": ["webAlojamiento", "tipoAlojamiento"],
                     "entities": ["HOTEL & SPA REAL VILLA ANAYET", "hotel"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer2 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "C[aáAÁ]MP[iíIÍ]NG L[eéEÉ]C[iíIÍ]N[aáAÁ], S.C.-L[eéEÉ]C[iíIÍ]N[aáAÁ]", "i")  .  FILTER (?id like "%registro-camping-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')"""


    def test_alojamientos_hotel_web(self):
        results = self.buscador.generate_query({"question": "Cual es la página web del hotel HOTEL & SPA REAL VILLA ANAYET", "intents": ["webAlojamiento", "tipoAlojamiento"],
                     "entities": ["HOTEL & SPA REAL VILLA ANAYET", "hotel"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer2 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "H[oóOÓ]T[eéEÉ]L & SP[aáAÁ] R[eéEÉ][aáAÁ]L V[iíIÍ]LL[aáAÁ] [aáAÁ]N[aáAÁ]Y[eéEÉ]T", "i")  .  FILTER (?id like "%registro-alojamiento-hotelero%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamientos_albergue_web(self):
        results = self.buscador.generate_query({"question": "Cual es la página web del albergue EXPLOTACIONES HOTELERAS VILLANUA, S.L.",
                     "intents": ["webAlojamiento", "tipoAlojamiento"],
                     "entities": ["EXPLOTACIONES HOTELERAS VILLANUA, S.L.", "albergue"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer2 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "[eéEÉ]XPL[oóOÓ]T[aáAÁ]C[iíIÍ][oóOÓ]N[eéEÉ]S H[oóOÓ]T[eéEÉ]L[eéEÉ]R[aáAÁ]S V[iíIÍ]LL[aáAÁ]N[uúUÚ][aáAÁ], S.L.", "i")  .  FILTER (?id like "%registro-albergue-refugio%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')



    def test_alojamientos_apartamento_web(self):
        results = self.buscador.generate_query({"question": "Cual es la página web del apartamento BALCÓN DEL PIRINEO RURAL ORDESA",
                     "intents": ["webAlojamiento", "tipoAlojamiento"],
                     "entities": ["BALCÓN DEL PIRINEO RURAL ORDESA", "apartamento"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer2 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "B[aáAÁ]LC[oóOÓ]N D[eéEÉ]L P[iíIÍ]R[iíIÍ]N[eéEÉ][oóOÓ] R[uúUÚ]R[aáAÁ]L [oóOÓ]RD[eéEÉ]S[aáAÁ]", "i")  .  FILTER (?id like "%registro-apartamento-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamientos_casa_web(self):
        results = self.buscador.generate_query({"question": "Cual es la página web de la casa rural CASA RURAL MONTE PERDIDO",
                     "intents": ["webAlojamiento", "tipoAlojamiento"],
                     "entities": ["CASA RURAL MONTE PERDIDO", "casa rural"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer2 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "C[aáAÁ]S[aáAÁ] R[uúUÚ]R[aáAÁ]L M[oóOÓ]NT[eéEÉ] P[eéEÉ]RD[iíIÍ]D[oóOÓ]", "i")  .  FILTER (?id like "%registro-alojamientos-turismo-rural%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamientos_camping_web(self):
        results = self.buscador.generate_query({"question": "Cual es la página web del camping CAMPING LECINA, S.C.-LECINA",
                     "intents": ["webAlojamiento", "tipoAlojamiento"],
                     "entities": ["CAMPING LECINA, S.C.-LECINA", "camping"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer2 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "C[aáAÁ]MP[iíIÍ]NG L[eéEÉ]C[iíIÍ]N[aáAÁ], S.C.-L[eéEÉ]C[iíIÍ]N[aáAÁ]", "i")  .  FILTER (?id like "%registro-camping-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    """def test_alojamientos_hotel_direccion(self):
        results = self.buscador.generate_query({"question": "Cual es la direccion del hotel HOTEL & SPA REAL VILLA ANAYET", "intents": ["direccionAlojamiento", "tipoAlojamiento"],
                     "entities": ["HOTEL & SPA REAL VILLA ANAYET", "hotel"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer0 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "H[oóOÓ]T[eéEÉ]L & SP[aáAÁ] R[eéEÉ][aáAÁ]L V[iíIÍ]LL[aáAÁ] [aáAÁ]N[aáAÁ]Y[eéEÉ]T", "i")  .  FILTER (?id like "%registro-alojamiento-hotelero%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')"""


    def test_alojamientos_albergue_direccion(self):
        results = self.buscador.generate_query({"question": "Cual es la direccion del albergue EXPLOTACIONES HOTELERAS VILLANUA, S.L.",
                     "intents": ["direccionAlojamiento", "tipoAlojamiento"],
                     "entities": ["EXPLOTACIONES HOTELERAS VILLANUA, S.L.", "albergue"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer0 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "[eéEÉ]XPL[oóOÓ]T[aáAÁ]C[iíIÍ][oóOÓ]N[eéEÉ]S H[oóOÓ]T[eéEÉ]L[eéEÉ]R[aáAÁ]S V[iíIÍ]LL[aáAÁ]N[uúUÚ][aáAÁ], S.L.", "i")  .  FILTER (?id like "%registro-albergue-refugio%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamientos_apartamento_direccion(self):
        results = self.buscador.generate_query({"question": "Cual es la direccion del apartamento BALCÓN DEL PIRINEO RURAL ORDESA",
                     "intents": ["direccionAlojamiento", "tipoAlojamiento"],
                     "entities": ["BALCÓN DEL PIRINEO RURAL ORDESA", "apartamento"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer0 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "B[aáAÁ]LC[oóOÓ]N D[eéEÉ]L P[iíIÍ]R[iíIÍ]N[eéEÉ][oóOÓ] R[uúUÚ]R[aáAÁ]L [oóOÓ]RD[eéEÉ]S[aáAÁ]", "i")  .  FILTER (?id like "%registro-apartamento-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamientos_casa_direccion(self):
        results = self.buscador.generate_query({"question": "Cual es la direccion de la casa rural CASA RURAL MONTE PERDIDO",
                     "intents": ["direccionAlojamiento", "tipoAlojamiento"],
                     "entities": ["CASA RURAL MONTE PERDIDO", "casa rural"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer0 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "C[aáAÁ]S[aáAÁ] R[uúUÚ]R[aáAÁ]L M[oóOÓ]NT[eéEÉ] P[eéEÉ]RD[iíIÍ]D[oóOÓ]", "i")  .  FILTER (?id like "%registro-alojamientos-turismo-rural%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamientos_camping_direccion(self):
        results = self.buscador.generate_query({"question": "Cual es la direccion del camping CAMPING LECINA, S.C.-LECINA",
                     "intents": ["direccionAlojamiento", "tipoAlojamiento"],
                     "entities": ["CAMPING LECINA, S.C.-LECINA", "camping"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer0 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "C[aáAÁ]MP[iíIÍ]NG L[eéEÉ]C[iíIÍ]N[aáAÁ], S.C.-L[eéEÉ]C[iíIÍ]N[aáAÁ]", "i")  .  FILTER (?id like "%registro-camping-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    """def test_alojamientos_hoteles_provincia(self):
        results = self.buscador.generate_query({"question": "Dime el listado de hoteles en Zaragoza", "intents": ["listadoAlojamiento", "tipoAlojamiento", "tipoLugar"],
                     "entities": ["50", "hotel", "provincia"]})
        self.assertEqual(results,'""SELECT  DISTINCT ?answer7 as ?answer0 ?answer1 as ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id org:linkedTo ?etiqueta . FILTER (?answer1 like '50%') . ?id dc:title ?answer7  FILTER (?id like "%registro-alojamiento-hotelero%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .})"""


    def test_alojamientos_hoteles_ciudad(self):
        results = self.buscador.generate_query({"question": "Dime el listado de hoteles en Zaragoza", "intents": ["listadoAlojamiento", "tipoAlojamiento", "tipoLugar"],
                     "entities": ["Zaragoza", "hotel", "municipio"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer7 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { {?id org:linkedTo ?etiqueta . Filter (?etiqueta like "%municipio%" && REGEX(?etiqueta, "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i"))} ?id dc:title ?answer7  FILTER (?id like "%registro-alojamiento-hotelero%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    """def test_alojamientos_albergues_provincia(self):
        results = self.buscador.generate_query({"question": "Dime el listado de albergues en Tarazona",
                     "intents": ["listadoAlojamiento", "tipoAlojamiento", "tipoLugar"],
                     "entities": ["50", "albergue", "provincia"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer7 as ?answer0 ?answer1 as ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id org:linkedTo ?etiqueta . FILTER (?answer1 like '50%') . ?id dc:title ?answer7  FILTER (?id like "%registro-albergue-refugio%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')"""


    def test_alojamientos_albergues_ciudad(self):
        results = self.buscador.generate_query({"question": "Dime el listado de albergues en Tarazona",
                     "intents": ["listadoAlojamiento", "tipoAlojamiento", "tipoLugar"],
                     "entities": ["Jatiel", "albergue", "municipio"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer7 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { {?id org:linkedTo ?etiqueta . Filter (?etiqueta like "%municipio%" && REGEX(?etiqueta, "J[aáAÁ]t[iíIÍ][eéEÉ]l", "i"))} ?id dc:title ?answer7  FILTER (?id like "%registro-albergue-refugio%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    """def test_alojamientos_apartamentos_provincia(self):
        results = self.buscador.generate_query({"question": "Dime el listado de apartamentos en Zaragoza",
                     "intents": ["listadoAlojamiento", "tipoAlojamiento", "tipoLugar"],
                     "entities": ["50", "apartamento", "provincia"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?answer0 . ?alojamiento <http://harmonet.org/harmonise#location> ?location . ?location <http://harmonet.org/harmonise#address> ?address . ?address <http://harmonet.org/harmonise#province> ?province . ?province <http://harmonet.org/harmonise#languageText> ?language . ?language <http://harmonet.org/harmonise#text> ?etiqueta .  filter REGEX(?etiqueta, \"50\", \"i\") . ?alojamiento ?aux0 ei2a:apartamento_turistico . }")"""


    def test_alojamientos_apartamentos_ciudad(self):
        results = self.buscador.generate_query({"question": "Dime el listado de apartamentos en Zaragoza",
                     "intents": ["listadoAlojamiento", "tipoAlojamiento", "tipoLugar"],
                     "entities": ["Zaragoza", "apartamento", "municipio"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer7 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { {?id org:linkedTo ?etiqueta . Filter (?etiqueta like "%municipio%" && REGEX(?etiqueta, "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i"))} ?id dc:title ?answer7  FILTER (?id like "%registro-apartamento-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    """def test_alojamientos_casa_provincia(self):
        results = self.buscador.generate_query({"question": "Dime el listado de casas rurales en Zaragoza",
                     "intents": ["listadoAlojamiento", "tipoAlojamiento", "tipoLugar"],
                     "entities": ["50", "casa rural", "provincia"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?answer0 . ?alojamiento <http://protege.stanford.edu/rdf/HTOv4002#location> ?location . ?location <http://protege.stanford.edu/rdf/HTOv4002#address> ?address . ?address <http://protege.stanford.edu/rdf/HTOv4002#province> ?province . ?province <http://protege.stanford.edu/rdf/HTOv4002#languageText> ?language . ?language <http://protege.stanford.edu/rdf/HTOv4002#text> ?etiqueta .  filter REGEX(?etiqueta, \"50\", \"i\") . ?alojamiento ?aux0 ei2a:alojamiento_rural . }")"""


    def test_alojamientos_casa_municipio(self):
        results = self.buscador.generate_query({"question": "Dime el listado de casas rurales en Zaragoza",
                     "intents": ["listadoAlojamiento", "tipoAlojamiento", "tipoLugar"],
                     "entities": ["Zaragoza", "casa rural", "municipio"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer7 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { {?id org:linkedTo ?etiqueta . Filter (?etiqueta like "%municipio%" && REGEX(?etiqueta, "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i"))} ?id dc:title ?answer7  FILTER (?id like "%registro-alojamientos-turismo-rural%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')

    """
    #PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?answer0 . ?alojamiento <http://harmonet.org/harmonise#location> ?location . ?location <http://harmonet.org/harmonise#address> ?address . ?address <http://harmonet.org/harmonise#province> ?province . ?province <http://harmonet.org/harmonise#languageText> ?language . ?language <http://harmonet.org/harmonise#text> ?etiqueta .  filter REGEX(?etiqueta, "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i") . ?alojamiento ?aux0 ei2a:camping_turistico . }
    #
    #  test falla porque no devuelve la ciudad sino el codigo de ciudad
    def test_alojamientos_campings_provincia(self):
        results = self.buscador.generate_query({"question": "Dime el listado de campings en Zaragoza",
                     "intents": ["listadoAlojamiento", "tipoAlojamiento", "tipoLugar"],
                     "entities": ["Zaragoza", "camping", "provincia"]})
        self.assertEqual(results,"None")

    """

    def test_alojamientos_campings_municipio(self):
        results = self.buscador.generate_query({"question": "Dime el listado de campings en Zaragoza",
                     "intents": ["listadoAlojamiento", "tipoAlojamiento", "tipoLugar"],
                     "entities": ["Zaragoza", "camping", "municipio"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer7 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { {?id org:linkedTo ?etiqueta . Filter (?etiqueta like "%municipio%" && REGEX(?etiqueta, "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i"))} ?id dc:title ?answer7  FILTER (?id like "%registro-camping-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_turismo_agencia_tlf(self):
        results = self.buscador.generate_query({"question": "Cual es el telefono de la agencia de viajes ALMOZARA VIAJES",
                     "intents": ["telefonoAgenciaViajes"],
                     "entities": ["ALMOZARA VIAJES"]})
        self.assertEqual(results,'SELECT DISTINCT ?org_siteAddress_vcard_tel as ?answer0 ?registro_agencias_viaje_dc_title as ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?registro_agencias_viaje rdf:type org:Organization. ?registro_agencias_viaje ns:wasUsedBy ?procedencia. ?procedencia ns:wasAssociatedWith <http://opendata.aragon.es/datos/catalogo/dataset/ga-od-core/63>. OPTIONAL {?registro_agencias_viaje dc:identifier ?registro_agencias_viaje_dc_identifier.} OPTIONAL {?registro_agencias_viaje dc:title ?registro_agencias_viaje_dc_title.} OPTIONAL {?registro_agencias_viaje dc:description ?registro_agencias_viaje_dc_description.} OPTIONAL {?registro_agencias_viaje foaf:homepage ?registro_agencias_viaje_foaf_homepage.} OPTIONAL {?registro_agencias_viaje dc:date ?registro_agencias_viaje_dc_date.} OPTIONAL {?registro_agencias_viaje org:classification ?registro_agencias_viaje_org_classification.} OPTIONAL {?registro_agencias_viaje org:linkedTo ?registro_agencias_viaje_org_linkedTo.} OPTIONAL {?registro_agencias_viaje org:hasSite ?org_hasSite.} OPTIONAL {?org_hasSite org:siteAddress ?org_siteAddress.} OPTIONAL {?org_siteAddress vcard:street-address ?org_siteAddress_vcard_street_address.} OPTIONAL {?org_siteAddress vcard:postal-code ?org_siteAddress_vcard_postal_code.} OPTIONAL {?org_siteAddress vcard:tel ?org_siteAddress_vcard_tel.} OPTIONAL {?org_siteAddress vcard:email ?org_siteAddress_vcard_email.}  FILTER regex(?registro_agencias_viaje_dc_title, "[aáAÁ]LM[oóOÓ]Z[aáAÁ]R[aáAÁ] V[iíIÍ][aáAÁ]J[eéEÉ]S", "i") . }')


    def test_turismo_agencia_email(self):
        results = self.buscador.generate_query({"question": "Cual es el email de la agencia de viajes ALMOZARA VIAJES",
                     "intents": ["emailAgenciaViajes"],
                     "entities": ["ALMOZARA VIAJES"]})
        self.assertEqual(results,'SELECT DISTINCT ?org_siteAddress_vcard_email as ?answer0 ?registro_agencias_viaje_dc_title as ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?registro_agencias_viaje rdf:type org:Organization. ?registro_agencias_viaje ns:wasUsedBy ?procedencia. ?procedencia ns:wasAssociatedWith <http://opendata.aragon.es/datos/catalogo/dataset/ga-od-core/63>. OPTIONAL {?registro_agencias_viaje dc:identifier ?registro_agencias_viaje_dc_identifier.} OPTIONAL {?registro_agencias_viaje dc:title ?registro_agencias_viaje_dc_title.} OPTIONAL {?registro_agencias_viaje dc:description ?registro_agencias_viaje_dc_description.} OPTIONAL {?registro_agencias_viaje foaf:homepage ?registro_agencias_viaje_foaf_homepage.} OPTIONAL {?registro_agencias_viaje dc:date ?registro_agencias_viaje_dc_date.} OPTIONAL {?registro_agencias_viaje org:classification ?registro_agencias_viaje_org_classification.} OPTIONAL {?registro_agencias_viaje org:linkedTo ?registro_agencias_viaje_org_linkedTo.} OPTIONAL {?registro_agencias_viaje org:hasSite ?org_hasSite.} OPTIONAL {?org_hasSite org:siteAddress ?org_siteAddress.} OPTIONAL {?org_siteAddress vcard:street-address ?org_siteAddress_vcard_street_address.} OPTIONAL {?org_siteAddress vcard:postal-code ?org_siteAddress_vcard_postal_code.} OPTIONAL {?org_siteAddress vcard:tel ?org_siteAddress_vcard_tel.} OPTIONAL {?org_siteAddress vcard:email ?org_siteAddress_vcard_email.}  FILTER regex(?registro_agencias_viaje_dc_title, "[aáAÁ]LM[oóOÓ]Z[aáAÁ]R[aáAÁ] V[iíIÍ][aáAÁ]J[eéEÉ]S", "i") . }')


    def test_turismo_agencia_web(self):
        results = self.buscador.generate_query({"question": "Cual es la pagina web de la agencia de viajes ALMOZARA VIAJES",
                     "intents": ["webAgenciaViajes"],
                     "entities": ["TULAVIAJES"]})
        self.assertEqual(results,'SELECT DISTINCT ?registro_agencias_viaje_foaf_homepage as ?answer0 ?registro_agencias_viaje_dc_title as ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?registro_agencias_viaje rdf:type org:Organization. ?registro_agencias_viaje ns:wasUsedBy ?procedencia. ?procedencia ns:wasAssociatedWith <http://opendata.aragon.es/datos/catalogo/dataset/ga-od-core/63>. OPTIONAL {?registro_agencias_viaje dc:identifier ?registro_agencias_viaje_dc_identifier.} OPTIONAL {?registro_agencias_viaje dc:title ?registro_agencias_viaje_dc_title.} OPTIONAL {?registro_agencias_viaje dc:description ?registro_agencias_viaje_dc_description.} OPTIONAL {?registro_agencias_viaje foaf:homepage ?registro_agencias_viaje_foaf_homepage.} OPTIONAL {?registro_agencias_viaje dc:date ?registro_agencias_viaje_dc_date.} OPTIONAL {?registro_agencias_viaje org:classification ?registro_agencias_viaje_org_classification.} OPTIONAL {?registro_agencias_viaje org:linkedTo ?registro_agencias_viaje_org_linkedTo.} OPTIONAL {?registro_agencias_viaje org:hasSite ?org_hasSite.} OPTIONAL {?org_hasSite org:siteAddress ?org_siteAddress.} OPTIONAL {?org_siteAddress vcard:street-address ?org_siteAddress_vcard_street_address.} OPTIONAL {?org_siteAddress vcard:postal-code ?org_siteAddress_vcard_postal_code.} OPTIONAL {?org_siteAddress vcard:tel ?org_siteAddress_vcard_tel.} OPTIONAL {?org_siteAddress vcard:email ?org_siteAddress_vcard_email.}  FILTER regex(?registro_agencias_viaje_dc_title, "T[uúUÚ]L[aáAÁ]V[iíIÍ][aáAÁ]J[eéEÉ]S", "i") . }')


    def test_turismo_agencia_direccion(self):
        results = self.buscador.generate_query({"question": "Cual es la direccion de la agencia de viajes ALMOZARA VIAJES",
                     "intents": ["direccionAgenciaViajes"],
                     "entities": ["ALMOZARA VIAJES"]})
        self.assertEqual(results,'SELECT DISTINCT ?org_siteAddress_vcard_street_address as ?answer0 ?registro_agencias_viaje_dc_title as ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> WHERE { ?registro_agencias_viaje rdf:type org:Organization. ?registro_agencias_viaje ns:wasUsedBy ?procedencia. ?procedencia ns:wasAssociatedWith <http://opendata.aragon.es/datos/catalogo/dataset/ga-od-core/63>. OPTIONAL {?registro_agencias_viaje dc:identifier ?registro_agencias_viaje_dc_identifier.} OPTIONAL {?registro_agencias_viaje dc:title ?registro_agencias_viaje_dc_title.} OPTIONAL {?registro_agencias_viaje dc:description ?registro_agencias_viaje_dc_description.} OPTIONAL {?registro_agencias_viaje foaf:homepage ?registro_agencias_viaje_foaf_homepage.} OPTIONAL {?registro_agencias_viaje dc:date ?registro_agencias_viaje_dc_date.} OPTIONAL {?registro_agencias_viaje org:classification ?registro_agencias_viaje_org_classification.} OPTIONAL {?registro_agencias_viaje org:linkedTo ?registro_agencias_viaje_org_linkedTo.} OPTIONAL {?registro_agencias_viaje org:hasSite ?org_hasSite.} OPTIONAL {?org_hasSite org:siteAddress ?org_siteAddress.} OPTIONAL {?org_siteAddress vcard:street-address ?org_siteAddress_vcard_street_address.} OPTIONAL {?org_siteAddress vcard:postal-code ?org_siteAddress_vcard_postal_code.} OPTIONAL {?org_siteAddress vcard:tel ?org_siteAddress_vcard_tel.} OPTIONAL {?org_siteAddress vcard:email ?org_siteAddress_vcard_email.}  FILTER regex(?registro_agencias_viaje_dc_title, "[aáAÁ]LM[oóOÓ]Z[aáAÁ]R[aáAÁ] V[iíIÍ][aáAÁ]J[eéEÉ]S", "i") . }')


    """def test_turismo_agencias_ciudad(self):
        results = self.buscador.generate_query({"question": "Dime las agencias de viajes de Zaragoza",
                     "intents": ["listAgenciaViajes"],
                     "entities": ["Zaragoza"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?agencia ?aux0 ei2a:agencia_viaje . ?agencia <http://opendata.aragon.es/def/ei2a#organizationName> ?answer0 . ?agencia <http://www.w3.org/ns/org#hasSite> ?site . ?site <http://www.w3.org/ns/org#siteAddress> ?siteAddress . ?siteAddress <http://www.w3.org/2006/vcard/ns#hasAddress> ?address . ?address <http://www.w3.org/2006/vcard/ns#locality> ?etiqueta .  filter REGEX(?etiqueta, \"Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]\", \"i\") . }")"""


    def test_turismo_agencia_reserva(self):
        results = self.buscador.generate_query({"question": "Como puedo reservar el albergue EXPLOTACIONES HOTELERAS VILLANUA, S.L.",
                     "intents": ["reservarAlojamiento", "tipoAlojamiento"],
                     "entities": ["EXPLOTACIONES HOTELERAS VILLANUA, S.L.", "albergue"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer4 as ?answer0 ?answer3 as ?answer1  ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "[eéEÉ]XPL[oóOÓ]T[aáAÁ]C[iíIÍ][oóOÓ]N[eéEÉ]S H[oóOÓ]T[eéEÉ]L[eéEÉ]R[aáAÁ]S V[iíIÍ]LL[aáAÁ]N[uúUÚ][aáAÁ], S.L.", "i")  .  FILTER (?id like "%registro-albergue-refugio%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamiento_camping_reserva(self):
        results = self.buscador.generate_query({"question": "Como puedo reservar el camping CAMPING LECINA, S.C.-LECINA",
                     "intents": ["reservarAlojamiento", "tipoAlojamiento"],
                     "entities": ["CAMPING PINETA, S.L.-PINETA", "camping"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer4 as ?answer0 ?answer3 as ?answer1  ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "C[aáAÁ]MP[iíIÍ]NG P[iíIÍ]N[eéEÉ]T[aáAÁ], S.L.-P[iíIÍ]N[eéEÉ]T[aáAÁ]", "i")  .  FILTER (?id like "%registro-camping-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamiento_apartamento_reserva(self):
        results = self.buscador.generate_query({"question": "Como puedo reservar el apartamento BALCÓN DEL PIRINEO RURAL ORDESA",
                     "intents": ["reservarAlojamiento", "tipoAlojamiento"],
                     "entities": ["BALCÓN DEL PIRINEO RURAL ORDESA", "apartamento"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer4 as ?answer0 ?answer3 as ?answer1  ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "B[aáAÁ]LC[oóOÓ]N D[eéEÉ]L P[iíIÍ]R[iíIÍ]N[eéEÉ][oóOÓ] R[uúUÚ]R[aáAÁ]L [oóOÓ]RD[eéEÉ]S[aáAÁ]", "i")  .  FILTER (?id like "%registro-apartamento-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamiento_casa_reserva(self):
        results = self.buscador.generate_query({"question": "Como puedo reservar la casa rural CASA ARBOLEDA-LAFUENTE",
                     "intents": ["reservarAlojamiento", "tipoAlojamiento"],
                     "entities": ["CASA ARBOLEDA-LAFUENTE", "casa rural"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer4 as ?answer0 ?answer3 as ?answer1  ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "C[aáAÁ]S[aáAÁ] [aáAÁ]RB[oóOÓ]L[eéEÉ]D[aáAÁ]-L[aáAÁ]F[uúUÚ][eéEÉ]NT[eéEÉ]", "i")  .  FILTER (?id like "%registro-alojamientos-turismo-rural%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamiento_hotel_reserva(self):
        results = self.buscador.generate_query({"question": "Como puedo reservar el hotel HOTEL & SPA REAL VILLA ANAYET",
                     "intents": ["reservarAlojamiento", "tipoAlojamiento"],
                     "entities": ["HOTEL & SPA REAL VILLA ANAYET", "hotel"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer4 as ?answer0 ?answer3 as ?answer1  ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "H[oóOÓ]T[eéEÉ]L & SP[aáAÁ] R[eéEÉ][aáAÁ]L V[iíIÍ]LL[aáAÁ] [aáAÁ]N[aáAÁ]Y[eéEÉ]T", "i")  .  FILTER (?id like "%registro-alojamiento-hotelero%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamiento_hoteles_numero(self):
        results = self.buscador.generate_query({"question": "Numero de hoteles en Zaragoza",
                     "intents": ["numeroAlojamiento", "tipoAlojamiento"],
                     "entities": ["Zaragoza", "hotel"]})
        self.assertEqual(results,'SELECT  COUNT(DISTINCT ?answer0) as ?answer0 FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i")  .  FILTER (?id like "%registro-alojamiento-hotelero%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamiento_casas_numero(self):
        results = self.buscador.generate_query({"question": "Numero de casas rurales en Zaragoza",
                     "intents": ["numeroAlojamiento", "tipoAlojamiento"],
                     "entities": ["Zaragoza", "casa rural"]})
        self.assertEqual(results,'SELECT  COUNT(DISTINCT ?answer0) as ?answer0 FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i")  .  FILTER (?id like "%registro-alojamientos-turismo-rural%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')



    def test_alojamiento_apartamentos_numero(self):
        results = self.buscador.generate_query({"question": "Numero de apartamentos en Panticosa",
                     "intents": ["numeroAlojamiento", "tipoAlojamiento"],
                     "entities": ["Panticosa", "apartamento"]})
        self.assertEqual(results,'SELECT  COUNT(DISTINCT ?answer0) as ?answer0 FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "P[aáAÁ]nt[iíIÍ]c[oóOÓ]s[aáAÁ]", "i")  .  FILTER (?id like "%registro-apartamento-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamiento_campings_numero(self):
        results = self.buscador.generate_query({"question": "Numero de campings en Zaragoza",
                     "intents": ["numeroAlojamiento", "tipoAlojamiento"],
                     "entities": ["Zaragoza", "camping"]})
        self.assertEqual(results,'SELECT  COUNT(DISTINCT ?answer0) as ?answer0 FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i")  .  FILTER (?id like "%registro-camping-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamiento_albegues_numero(self):
        results = self.buscador.generate_query({"question": "Numero de albergues en Zaragoza",
                     "intents": ["numeroAlojamiento", "tipoAlojamiento"],
                     "entities": ["Zaragoza", "albergue"]})
        self.assertEqual(results,'SELECT  COUNT(DISTINCT ?answer0) as ?answer0 FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i")  .  FILTER (?id like "%registro-albergue-refugio%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    """def test_alojamiento_albegues_plazas_numero(self):
        results = self.buscador.generate_query({"question": "Numero de plazas del albergue EXPLOTACIONES HOTELERAS VILLANUA, S.L.",
                     "intents": ["plazasAlojamiento", "tipoAlojamiento"],
                     "entities": ["EXPLOTACIONES HOTELERAS VILLANUA, S.L.", "albergue"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"[eéEÉ]XPL[oóOÓ]T[aáAÁ]C[iíIÍ][oóOÓ]N[eéEÉ]S H[oóOÓ]T[eéEÉ]L[eéEÉ]R[aáAÁ]S V[iíIÍ]LL[aáAÁ]N[uúUÚ][aáAÁ], S.L.\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#profile> ?profile . ?profile <http://harmonet.org/harmonise#profileField> ?profileField . ?profileField <http://harmonet.org/harmonise#fieldName> ?aux1 . filter REGEX(?aux1, \"N[uúUÚ]m[eéEÉ]r[oóOÓ] d[eéEÉ] pl[aáAÁ]z[aáAÁ]s\", \"i\") . ?profileField <http://harmonet.org/harmonise#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:albergue_refugio . }")


    def test_alojamiento_apartamento_plazas_numero(self):
        results = self.buscador.generate_query({"question": "Numero de plazas del apartamento BALCÓN DEL PIRINEO RURAL ORDESA",
                     "intents": ["plazasAlojamiento", "tipoAlojamiento"],
                     "entities": ["BALCÓN DEL PIRINEO RURAL ORDESA", "apartamento"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"B[aáAÁ]LC[oóOÓ]N D[eéEÉ]L P[iíIÍ]R[iíIÍ]N[eéEÉ][oóOÓ] R[uúUÚ]R[aáAÁ]L [oóOÓ]RD[eéEÉ]S[aáAÁ]\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#profile> ?profile . ?profile <http://harmonet.org/harmonise#profileField> ?profileField . ?profileField <http://harmonet.org/harmonise#fieldName> ?aux1 . filter REGEX(?aux1, \"N[uúUÚ]m[eéEÉ]r[oóOÓ] d[eéEÉ] pl[aáAÁ]z[aáAÁ]s\", \"i\") . ?profileField <http://harmonet.org/harmonise#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:apartamento_turistico . }")


    def test_alojamiento_casa_plazas_numero(self):
        results = self.buscador.generate_query({"question": "Numero de plazas de la casa rural CASA ARBOLEDA-LAFUENTE",
                     "intents": ["plazasAlojamiento", "tipoAlojamiento"],
                     "entities": ["CASA ARBOLEDA-LAFUENTE", "casa rural"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"C[aáAÁ]S[aáAÁ] [aáAÁ]RB[oóOÓ]L[eéEÉ]D[aáAÁ]-L[aáAÁ]F[uúUÚ][eéEÉ]NT[eéEÉ]\", \"i\") . ?alojamiento <http://protege.stanford.edu/rdf/HTOv4002#profile> ?profile . ?profile <http://protege.stanford.edu/rdf/HTOv4002#profileField> ?profileField . ?profileField <http://protege.stanford.edu/rdf/HTOv4002#fieldName> ?aux1 . filter REGEX(?aux1, \"N[uúUÚ]m[eéEÉ]r[oóOÓ] d[eéEÉ] pl[aáAÁ]z[aáAÁ]s\", \"i\") . ?profileField <http://protege.stanford.edu/rdf/HTOv4002#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_rural . }")"""


    def test_alojamiento_camping_localiza(self):
        results = self.buscador.generate_query({"question": "En que ciudad se encuentra el camping CAMPING PINETA, S.L.-PINETA",
                     "intents": ["ciudadAlojamiento", "tipoAlojamiento"],
                     "entities": ["CAMPING PINETA, S.L.-PINETA", "camping"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer5 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "C[aáAÁ]MP[iíIÍ]NG P[iíIÍ]N[eéEÉ]T[aáAÁ], S.L.-P[iíIÍ]N[eéEÉ]T[aáAÁ]", "i")  .  FILTER (?id like "%registro-camping-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamiento_apartamento_localiza(self):
        results = self.buscador.generate_query({"question": "En que ciudad se encuentra el apartamento BALCÓN DEL PIRINEO RURAL ORDESA",
                     "intents": ["ciudadAlojamiento", "tipoAlojamiento"],
                     "entities": ["BALCÓN DEL PIRINEO RURAL ORDESA", "apartamento"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer5 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "B[aáAÁ]LC[oóOÓ]N D[eéEÉ]L P[iíIÍ]R[iíIÍ]N[eéEÉ][oóOÓ] R[uúUÚ]R[aáAÁ]L [oóOÓ]RD[eéEÉ]S[aáAÁ]", "i")  .  FILTER (?id like "%registro-apartamento-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamiento_casa_localiza(self):
        results = self.buscador.generate_query({"question": "En que ciudad se encuentra la casa rural CASA ARBOLEDA-LAFUENTE",
                     "intents": ["ciudadAlojamiento", "tipoAlojamiento"],
                     "entities": ["CASA ARBOLEDA-LAFUENTE", "casa rural"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer5 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "C[aáAÁ]S[aáAÁ] [aáAÁ]RB[oóOÓ]L[eéEÉ]D[aáAÁ]-L[aáAÁ]F[uúUÚ][eéEÉ]NT[eéEÉ]", "i")  .  FILTER (?id like "%registro-alojamientos-turismo-rural%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamiento_hotel_localiza(self):
        results = self.buscador.generate_query({"question": "En que ciudad se encuentra el hotel HOTEL & SPA REAL VILLA ANAYET",
                     "intents": ["ciudadAlojamiento", "tipoAlojamiento"],
                     "entities": ["HOTEL & SPA REAL VILLA ANAYET", "hotel"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer5 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "H[oóOÓ]T[eéEÉ]L & SP[aáAÁ] R[eéEÉ][aáAÁ]L V[iíIÍ]LL[aáAÁ] [aáAÁ]N[aáAÁ]Y[eéEÉ]T", "i")  .  FILTER (?id like "%registro-alojamiento-hotelero%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    """def test_alojamiento_apartamento_localiza_categoria(self):
        results = self.buscador.generate_query({"question": "Cual es la categoria del apartamento BALCÓN DEL PIRINEO RURAL ORDESA",
                     "intents": ["categoriaAlojamiento", "tipoAlojamiento"],
                     "entities": ["BALCÓN DEL PIRINEO RURAL ORDESA", "apartamento"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"B[aáAÁ]LC[oóOÓ]N D[eéEÉ]L P[iíIÍ]R[iíIÍ]N[eéEÉ][oóOÓ] R[uúUÚ]R[aáAÁ]L [oóOÓ]RD[eéEÉ]S[aáAÁ]\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#award> ?aux1 . ?aux1 <http://harmonet.org/harmonise#awardingBody> ?answer0 . ?alojamiento ?aux0 ei2a:apartamento_turistico . }")


    def test_alojamiento_hotel_localiza_categoria(self):
        results = self.buscador.generate_query({"question": "Cual es la categoria del hotel HOTEL & SPA REAL VILLA ANAYET",
                     "intents": ["categoriaAlojamiento", "tipoAlojamiento"],
                     "entities": ["HOTEL & SPA REAL VILLA ANAYET", "hotel"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"H[oóOÓ]T[eéEÉ]L & SP[aáAÁ] R[eéEÉ][aáAÁ]L V[iíIÍ]LL[aáAÁ] [aáAÁ]N[aáAÁ]Y[eéEÉ]T\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#award> ?aux1 . ?aux1 <http://harmonet.org/harmonise#awardingBody> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_hotelero . }")"""


    def test_alojamiento_hoteles_ciudad(self):
        results = self.buscador.generate_query({"question": "Hoteles en la ciudad de Zaragoza",
                     "intents": ["alojamientoCiudad", "tipoAlojamiento"],
                     "entities": ["Zaragoza", "hotel"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer5 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i")  .  FILTER (?id like "%registro-alojamiento-hotelero%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')



    def test_alojamiento_casas_ciudad(self):
        results = self.buscador.generate_query({"question": "Casas rurales en la ciudad de Zaragoza",
                     "intents": ["alojamientoCiudad", "tipoAlojamiento"],
                     "entities": ["Zaragoza", "casa rural"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer5 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i")  .  FILTER (?id like "%registro-alojamientos-turismo-rural%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamiento_apartamentos_ciudad(self):
        results = self.buscador.generate_query({"question": "Apartamentos en la ciudad de Zaragoza",
                     "intents": ["alojamientoCiudad", "tipoAlojamiento"],
                     "entities": ["Zaragoza", "apartamento"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer5 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i")  .  FILTER (?id like "%registro-apartamento-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')


    def test_alojamiento_campings_ciudad(self):
        results = self.buscador.generate_query({"question": "Campings en la ciudad de Zaragoza",
                     "intents": ["alojamientoCiudad", "tipoAlojamiento"],
                     "entities": ["Zaragoza", "camping"]})
        self.assertEqual(results,'SELECT  DISTINCT ?answer5 as ?answer0 ?etiqueta FROM <http://opendata.aragon.es/def/ei2av2> where { ?id rdf:type org:Organization . ?id dc:title ?etiqueta . filter REGEX(?etiqueta, "Z[aáAÁ]r[aáAÁ]g[oóOÓ]z[aáAÁ]", "i")  .  FILTER (?id like "%registro-camping-turistico%") . ?id org:hasSite ?site . OPTIONAL {?id foaf:homepage ?answer2 .} OPTIONAL {?id org:linkedTo ?answer5} . ?site org:siteAddress ?address . OPTIONAL {?address vcard:street-address ?answer0} . OPTIONAL {?address vcard:postal-code ?answer1} . OPTIONAL {?address vcard:tel ?answer3} . OPTIONAL {?address vcard:email ?answer4} . OPTIONAL {?address vcard:fax ?answer6}  .}')



    """def test_alojamiento_apartamento_temporada(self):
        results = self.buscador.generate_query({"question": "Cuando es temporada alta en el apartamento BALCÓN DEL PIRINEO RURAL ORDESA",
                     "intents": ["temporadaAlojamiento", "tipoAlojamiento", "tipoTemporada"],
                     "entities": ["BALCÓN DEL PIRINEO RURAL ORDESA", "apartamento", "alta"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?answer1 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"B[aáAÁ]LC[oóOÓ]N D[eéEÉ]L P[iíIÍ]R[iíIÍ]N[eéEÉ][oóOÓ] R[uúUÚ]R[aáAÁ]L [oóOÓ]RD[eéEÉ]S[aáAÁ]\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#schedule> ?schedule . ?schedule <http://harmonet.org/harmonise#season>  <http://opendata.aragon.es/def/ei2a#season-list-value-temporada_alta> . ?schedule <http://harmonet.org/harmonise#dateRange> ?aux1 . ?aux1 <http://harmonet.org/harmonise#endDate> ?answer1 . ?aux1 <http://harmonet.org/harmonise#startDate> ?answer0 . ?alojamiento ?aux0 ei2a:apartamento_turistico . }")
    

        results = self.buscador.generate_query({"question": "Cuando es temporada baja en el apartamento BALCÓN DEL PIRINEO RURAL ORDESA",
                     "intents": ["temporadaAlojamiento", "tipoAlojamiento", "tipoTemporada"],
                     "entities": ["BALCÓN DEL PIRINEO RURAL ORDESA", "apartamento", "baja"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?answer1 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"B[aáAÁ]LC[oóOÓ]N D[eéEÉ]L P[iíIÍ]R[iíIÍ]N[eéEÉ][oóOÓ] R[uúUÚ]R[aáAÁ]L [oóOÓ]RD[eéEÉ]S[aáAÁ]\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#schedule> ?schedule . ?schedule <http://harmonet.org/harmonise#season>  <http://opendata.aragon.es/def/ei2a#season-list-value-temporada_alta> . ?schedule <http://harmonet.org/harmonise#dateRange> ?aux1 . ?aux1 <http://harmonet.org/harmonise#endDate> ?answer1 . ?aux1 <http://harmonet.org/harmonise#startDate> ?answer0 . ?alojamiento ?aux0 ei2a:apartamento_turistico . }")


        results = self.buscador.generate_query({"question": "Cuando es temporada media en el apartamento BALCÓN DEL PIRINEO RURAL ORDESA",
                     "intents": ["temporadaAlojamiento", "tipoAlojamiento", "tipoTemporada"],
                     "entities": ["BALCÓN DEL PIRINEO RURAL ORDESA", "apartamento", "media"]})

        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?answer1 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"B[aáAÁ]LC[oóOÓ]N D[eéEÉ]L P[iíIÍ]R[iíIÍ]N[eéEÉ][oóOÓ] R[uúUÚ]R[aáAÁ]L [oóOÓ]RD[eéEÉ]S[aáAÁ]\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#schedule> ?schedule . ?schedule <http://harmonet.org/harmonise#season>  <http://opendata.aragon.es/def/ei2a#season-list-value-temporada_alta> . ?schedule <http://harmonet.org/harmonise#dateRange> ?aux1 . ?aux1 <http://harmonet.org/harmonise#endDate> ?answer1 . ?aux1 <http://harmonet.org/harmonise#startDate> ?answer0 . ?alojamiento ?aux0 ei2a:apartamento_turistico . }")"""
        


    """def test_alojamiento_camping_temporada(self):
        results = self.buscador.generate_query({"question": "Cuando es temporada alta en el camping CAMPING DE LOS BAÑOS, S.L.-DE LOS BAÑOS",
                        "intents": ["temporadaAlojamiento", "tipoAlojamiento", "tipoTemporada"],
                        "entities": ["CAMPING DE LOS BAÑOS, S.L.-DE LOS BAÑOS", "camping", "alta"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?answer1 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"C[aáAÁ]MP[iíIÍ]NG D[eéEÉ] L[oóOÓ]S B[aáAÁ]Ñ[oóOÓ]S, S.L.-D[eéEÉ] L[oóOÓ]S B[aáAÁ]Ñ[oóOÓ]S\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#schedule> ?schedule . ?schedule <http://harmonet.org/harmonise#season>  <http://opendata.aragon.es/def/ei2a#season-list-value-temporada_alta> . ?schedule <http://harmonet.org/harmonise#dateRange> ?aux1 . ?aux1 <http://harmonet.org/harmonise#endDate> ?answer1 . ?aux1 <http://harmonet.org/harmonise#startDate> ?answer0 . ?alojamiento ?aux0 ei2a:camping_turistico . }")
        
        results = self.buscador.generate_query({"question": "Cuando es temporada baja en el camping CAMPING DE LOS BAÑOS, S.L.-DE LOS BAÑOS",
                        "intents": ["temporadaAlojamiento", "tipoAlojamiento", "tipoTemporada"],
                        "entities": ["CAMPING DE LOS BAÑOS, S.L.-DE LOS BAÑOS", "camping", "baja"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?answer1 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"C[aáAÁ]MP[iíIÍ]NG D[eéEÉ] L[oóOÓ]S B[aáAÁ]Ñ[oóOÓ]S, S.L.-D[eéEÉ] L[oóOÓ]S B[aáAÁ]Ñ[oóOÓ]S\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#schedule> ?schedule . ?schedule <http://harmonet.org/harmonise#season>  <http://opendata.aragon.es/def/ei2a#season-list-value-temporada_alta> . ?schedule <http://harmonet.org/harmonise#dateRange> ?aux1 . ?aux1 <http://harmonet.org/harmonise#endDate> ?answer1 . ?aux1 <http://harmonet.org/harmonise#startDate> ?answer0 . ?alojamiento ?aux0 ei2a:camping_turistico . }")

        results = self.buscador.generate_query({"question": "Cuando es temporada media en el camping CAMPING DE LOS BAÑOS, S.L.-DE LOS BAÑOS",
                        "intents": ["temporadaAlojamiento", "tipoAlojamiento", "tipoTemporada"],
                        "entities": ["CAMPING DE LOS BAÑOS, S.L.-DE LOS BAÑOS", "camping", "media"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?answer1 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"C[aáAÁ]MP[iíIÍ]NG D[eéEÉ] L[oóOÓ]S B[aáAÁ]Ñ[oóOÓ]S, S.L.-D[eéEÉ] L[oóOÓ]S B[aáAÁ]Ñ[oóOÓ]S\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#schedule> ?schedule . ?schedule <http://harmonet.org/harmonise#season>  <http://opendata.aragon.es/def/ei2a#season-list-value-temporada_alta> . ?schedule <http://harmonet.org/harmonise#dateRange> ?aux1 . ?aux1 <http://harmonet.org/harmonise#endDate> ?answer1 . ?aux1 <http://harmonet.org/harmonise#startDate> ?answer0 . ?alojamiento ?aux0 ei2a:camping_turistico . }")
        """


    """def test_alojamiento_casa_temporada(self):

        results = self.buscador.generate_query({"question": "Cuando es temporada baja en la casa rural CASA LOS CEREZOS",
                        "intents": ["temporadaAlojamiento", "tipoAlojamiento", "tipoTemporada"],
                        "entities": ["CASA LOS CEREZOS", "casa rural", "baja"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?answer1 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"C[aáAÁ]S[aáAÁ] L[oóOÓ]S C[eéEÉ]R[eéEÉ]Z[oóOÓ]S\", \"i\") . ?alojamiento <http://protege.stanford.edu/rdf/HTOv4002#schedule> ?schedule . ?schedule <http://protege.stanford.edu/rdf/HTOv4002#season>  <http://opendata.aragon.es/def/ei2a#season-list-value-temporada_baja> . ?schedule <http://protege.stanford.edu/rdf/HTOv4002#dateRange> ?aux1 . ?aux1 <http://protege.stanford.edu/rdf/HTOv4002#endDate> ?answer1 . ?aux1 <http://protege.stanford.edu/rdf/HTOv4002#startDate> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_rural . }")


    def test_alojamiento_hotel_temporada(self):
        results = self.buscador.generate_query({"question": "Cuando es temporada alta en el hotel HOTEL & SPA REAL VILLA ANAYET",
                        "intents": ["temporadaAlojamiento", "tipoAlojamiento", "tipoTemporada"],
                        "entities": ["HOTEL & SPA REAL VILLA ANAYET", "hotel", "alta"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?answer1 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"H[oóOÓ]T[eéEÉ]L & SP[aáAÁ] R[eéEÉ][aáAÁ]L V[iíIÍ]LL[aáAÁ] [aáAÁ]N[aáAÁ]Y[eéEÉ]T\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#schedule> ?schedule . ?schedule <http://harmonet.org/harmonise#season>  <http://opendata.aragon.es/def/ei2a#season-list-value-temporada_alta> . ?schedule <http://harmonet.org/harmonise#dateRange> ?aux1 . ?aux1 <http://harmonet.org/harmonise#endDate> ?answer1 . ?aux1 <http://harmonet.org/harmonise#startDate> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_hotelero . }")
        
        results = self.buscador.generate_query({"question": "Cuando es temporada baja en el hotel HOTEL GOLF & SPA REAL BADAGUAS-JACA",
                        "intents": ["temporadaAlojamiento", "tipoAlojamiento", "tipoTemporada"],
                        "entities": ["HOTEL GOLF & SPA REAL BADAGUAS-JACA", "hotel", "baja"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?answer1 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"H[oóOÓ]T[eéEÉ]L & SP[aáAÁ] R[eéEÉ][aáAÁ]L V[iíIÍ]LL[aáAÁ] [aáAÁ]N[aáAÁ]Y[eéEÉ]T\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#schedule> ?schedule . ?schedule <http://harmonet.org/harmonise#season>  <http://opendata.aragon.es/def/ei2a#season-list-value-temporada_alta> . ?schedule <http://harmonet.org/harmonise#dateRange> ?aux1 . ?aux1 <http://harmonet.org/harmonise#endDate> ?answer1 . ?aux1 <http://harmonet.org/harmonise#startDate> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_hotelero . }")

        results = self.buscador.generate_query({"question": "Cuando es temporada media en el hotel HOTEL GOLF & SPA REAL BADAGUAS-JACA",
                        "intents": ["temporadaAlojamiento", "tipoAlojamiento", "tipoTemporada"],
                        "entities": ["HOTEL GOLF & SPA REAL BADAGUAS-JACA", "hotel", "media"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?answer1 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"H[oóOÓ]T[eéEÉ]L & SP[aáAÁ] R[eéEÉ][aáAÁ]L V[iíIÍ]LL[aáAÁ] [aáAÁ]N[aáAÁ]Y[eéEÉ]T\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#schedule> ?schedule . ?schedule <http://harmonet.org/harmonise#season>  <http://opendata.aragon.es/def/ei2a#season-list-value-temporada_alta> . ?schedule <http://harmonet.org/harmonise#dateRange> ?aux1 . ?aux1 <http://harmonet.org/harmonise#endDate> ?answer1 . ?aux1 <http://harmonet.org/harmonise#startDate> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_hotelero . }")
        """


    """def test_alojamiento_camping_plazas_caravanas(self):
        results = self.buscador.generate_query({"question": "Cuantas plazas para caravanas hay en el camping CAMPING DE LOS BAÑOS, S.L.-DE LOS BAÑOS",
                        "intents": ["caravanasCamping", "tipoAlojamiento"],
                        "entities": ["CAMPING AINSA, S.L.-AINSA", "camping"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"C[aáAÁ]MP[iíIÍ]NG [aáAÁ][iíIÍ]NS[aáAÁ], S.L.-[aáAÁ][iíIÍ]NS[aáAÁ]\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#profile> ?profile . ?profile <http://harmonet.org/harmonise#profileField> ?profileField . ?profileField <http://harmonet.org/harmonise#fieldName> 'Número de plazas de mobile homes'  . ?profileField <http://harmonet.org/harmonise#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:camping_turistico . }")"""


    """def test_alojamiento_camping_plazas_parcelas(self):
        results = self.buscador.generate_query(
            {"question": "Cuantas parcelas hay en el camping CAMPING DE LOS BAÑOS, S.L.-DE LOS BAÑOS",
            "intents": ["parcelasCamping", "tipoAlojamiento"],
            "entities": ["CAMPING AINSA, S.L.-AINSA", "camping"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"C[aáAÁ]MP[iíIÍ]NG [aáAÁ][iíIÍ]NS[aáAÁ], S.L.-[aáAÁ][iíIÍ]NS[aáAÁ]\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#profile> ?profile . ?profile <http://harmonet.org/harmonise#profileField> ?profileField . ?profileField <http://harmonet.org/harmonise#fieldName> 'Número de parcelas'  . ?profileField <http://harmonet.org/harmonise#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:camping_turistico . }")"""



    """def test_alojamiento_camping_plazas_bungalows(self):
        results = self.buscador.generate_query(
        {"question": "Cuantos bungalows hay en el camping CAMPING DE LOS BAÑOS, S.L.-DE LOS BAÑOS",
         "intents": ["bungalowsCamping", "tipoAlojamiento"],
         "entities": ["CAMPING AINSA, S.L.-AINSA", "camping"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"C[aáAÁ]MP[iíIÍ]NG [aáAÁ][iíIÍ]NS[aáAÁ], S.L.-[aáAÁ][iíIÍ]NS[aáAÁ]\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#profile> ?profile . ?profile <http://harmonet.org/harmonise#profileField> ?profileField . ?profileField <http://harmonet.org/harmonise#fieldName> 'Número de parcelas'  . ?profileField <http://harmonet.org/harmonise#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:camping_turistico . }")"""


    """def test_alojamiento_casa_apartamentos_numero(self):
        results = self.buscador.generate_query(
        {"question": "Cuantos apartamentos tiene la casa rural CASA RURAL MORILLO",
         "intents": ["apartamentosCasaRural", "tipoAlojamiento"],
         "entities": ["CASA RURAL MORILLO", "casa rural"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"C[aáAÁ]S[aáAÁ] R[uúUÚ]R[aáAÁ]L M[oóOÓ]R[iíIÍ]LL[oóOÓ]\", \"i\") . ?alojamiento <http://protege.stanford.edu/rdf/HTOv4002#profile> ?profile . ?profile <http://protege.stanford.edu/rdf/HTOv4002#profileField> ?profileField . ?profileField <http://protege.stanford.edu/rdf/HTOv4002#fieldName> 'Número de apartamentos'  . ?profileField <http://protege.stanford.edu/rdf/HTOv4002#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_rural . }")"""


    """def test_alojamiento_casa_habitaciones_sencillas(self):
        results = self.buscador.generate_query(
        {"question": "Cuantos habitaciones sencillas tiene la casa rural CASA RURAL MONTE PERDIDO",
         "intents": ["habitacionesSencillasCasaRural", "tipoAlojamiento"],
         "entities": ["CASA RURAL MONTE PERDIDO", "casa rural"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"C[aáAÁ]S[aáAÁ] R[uúUÚ]R[aáAÁ]L M[oóOÓ]NT[eéEÉ] P[eéEÉ]RD[iíIÍ]D[oóOÓ]\", \"i\") . ?alojamiento <http://protege.stanford.edu/rdf/HTOv4002#profile> ?profile . ?profile <http://protege.stanford.edu/rdf/HTOv4002#profileField> ?profileField . ?profileField <http://protege.stanford.edu/rdf/HTOv4002#fieldName> 'Número de habitaciones sencillas'  . ?profileField <http://protege.stanford.edu/rdf/HTOv4002#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_rural . }")"""


    """def test_alojamiento_casa_habitaciones_dobles(self):
        results = self.buscador.generate_query(
        {"question": "Cuantos habitaciones dobles tiene la casa rural CASA RURAL MORILLO",
         "intents": ["habitacionesDoblesCasaRural", "tipoAlojamiento"],
         "entities": ["CASA RURAL MORILLO", "casa rural"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"C[aáAÁ]S[aáAÁ] R[uúUÚ]R[aáAÁ]L M[oóOÓ]R[iíIÍ]LL[oóOÓ]\", \"i\") . ?alojamiento <http://protege.stanford.edu/rdf/HTOv4002#profile> ?profile . ?profile <http://protege.stanford.edu/rdf/HTOv4002#profileField> ?profileField . ?profileField <http://protege.stanford.edu/rdf/HTOv4002#fieldName> 'Número de habitaciones dobles'  . ?profileField <http://protege.stanford.edu/rdf/HTOv4002#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_rural . }")"""


    """def test_alojamiento_hotel_habitaciones_dobles(self):
        results = self.buscador.generate_query(
        {"question": "Cuantos habitaciones tiene el hotel HOTEL GOLF & SPA REAL BADAGUAS-JACA",
         "intents": ["habitacionesHotel", "tipoAlojamiento", "tipoHabitacion"],
         "entities": ["HOTEL GOLF & SPA REAL BADAGUAS-JACA", "hotel", "total"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"S[aáAÁ]NDST[oóOÓ]N[eéEÉ] G[uúUÚ][eéEÉ]STH[oóOÓ][uúUÚ]S[eéEÉ] 3\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#profile> ?profile . ?profile <http://harmonet.org/harmonise#profileField> ?profileField . ?profileField <http://harmonet.org/harmonise#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_hotelero . filter REGEX(?profileField,\"doble\",\"i\") . }")"""


    """def test_alojamiento_hotel_habitaciones_aseo(self):
        results = self.buscador.generate_query(
        {"question": "Cuantos habitaciones con baño tiene el hotel HOTEL GOLF & SPA REAL BADAGUAS-JACA",
         "intents": ["habitacionesBañoHotel", "tipoAlojamiento"],
         "entities": ["ANTIGUA POSADA RODA", "hotel"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"[aáAÁ]NT[iíIÍ]G[uúUÚ][aáAÁ] P[oóOÓ]S[aáAÁ]D[aáAÁ] R[oóOÓ]D[aáAÁ]\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#profile> ?profile . ?profile <http://harmonet.org/harmonise#profileField> ?profileField . ?profileField <http://harmonet.org/harmonise#fieldName> 'Número de habitaciones con baño'  . ?profileField <http://harmonet.org/harmonise#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_hotelero . }")"""


    """def test_alojamiento_hotel_habitaciones_no_aseo(self):
        results = self.buscador.generate_query(
        {"question": "Cuantos habitaciones sin baño tiene el hotel SANDSTONE GUESTHOUSE 3",
         "intents": ["habitacionessinBañoHotel", "tipoAlojamiento"],
         "entities": ["SANDSTONE GUESTHOUSE 3", "hotel"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"S[aáAÁ]NDST[oóOÓ]N[eéEÉ] G[uúUÚ][eéEÉ]STH[oóOÓ][uúUÚ]S[eéEÉ] 3\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#profile> ?profile . ?profile <http://harmonet.org/harmonise#profileField> ?profileField . ?profileField <http://harmonet.org/harmonise#fieldName> 'Número de habitaciones sin baño'  . ?profileField <http://harmonet.org/harmonise#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_hotelero . }")"""


    """def test_alojamiento_hotel_camas(self):
        results = self.buscador.generate_query(
        {"question": "Cuantas camas tiene el hotel SANDSTONE GUESTHOUSE 3",
         "intents": ["camasHotel", "tipoAlojamiento"],
         "entities": ["SANDSTONE GUESTHOUSE 3", "hotel"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"S[aáAÁ]NDST[oóOÓ]N[eéEÉ] G[uúUÚ][eéEÉ]STH[oóOÓ][uúUÚ]S[eéEÉ] 3\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#profile> ?profile . ?profile <http://harmonet.org/harmonise#profileField> ?profileField . filter REGEX(?profileField, \"plazas\", \"i\")   . ?profileField <http://harmonet.org/harmonise#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_hotelero . }")"""


    """def test_alojamiento_hotel_habitaciones_cuadruples(self):
        results = self.buscador.generate_query(
        {"question": "Cuantas habitaciones cuadruples tiene el hotel SANDSTONE GUESTHOUSE 3",
         "intents": ["habitacionesHotel", "tipoAlojamiento", "tipoHabitacion"],
         "entities": ["SANDSTONE GUESTHOUSE 3", "hotel", "cuadruple"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"S[aáAÁ]NDST[oóOÓ]N[eéEÉ] G[uúUÚ][eéEÉ]STH[oóOÓ][uúUÚ]S[eéEÉ] 3\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#profile> ?profile . ?profile <http://harmonet.org/harmonise#profileField> ?profileField . ?profileField <http://harmonet.org/harmonise#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_hotelero . filter REGEX(?profileField,\"doble\",\"i\") . }")"""


    """def test_alojamiento_hotel_habitaciones_dobles(self):
        results = self.buscador.generate_query(
        {"question": "Cuantas habitaciones dobles tiene el hotel SANDSTONE GUESTHOUSE 3",
         "intents": ["habitacionesHotel", "tipoAlojamiento", "tipoHabitacion"],
         "entities": ["SANDSTONE GUESTHOUSE 3", "hotel", "dobles"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"S[aáAÁ]NDST[oóOÓ]N[eéEÉ] G[uúUÚ][eéEÉ]STH[oóOÓ][uúUÚ]S[eéEÉ] 3\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#profile> ?profile . ?profile <http://harmonet.org/harmonise#profileField> ?profileField . ?profileField <http://harmonet.org/harmonise#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_hotelero . filter REGEX(?profileField,\"doble\",\"i\") . }")"""


    """def test_alojamiento_hotel_habitaciones_sencillas(self):
        results = self.buscador.generate_query(
        {"question": "Cuantas habitaciones sencillas tiene el hotel GRAN HOTEL",
         "intents": ["habitacionesHotel", "tipoAlojamiento", "tipoHabitacion"],
         "entities": ["GRAN HOTEL", "hotel", "sencillas"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"GR[aáAÁ]N H[oóOÓ]T[eéEÉ]L\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#profile> ?profile . ?profile <http://harmonet.org/harmonise#profileField> ?profileField . ?profileField <http://harmonet.org/harmonise#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_hotelero . filter REGEX(?profileField,\"sencilla\",\"i\") . }")"""


    """def test_alojamiento_hotel_habitaciones_suits(self):
        results = self.buscador.generate_query(
        {"question": "Cuantas suits tiene el hotel GRAN HOTEL",
         "intents": ["habitacionesHotel", "tipoAlojamiento", "tipoHabitacion"],
         "entities": ["GRAN HOTEL", "hotel", "suits"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"GR[aáAÁ]N H[oóOÓ]T[eéEÉ]L\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#profile> ?profile . ?profile <http://harmonet.org/harmonise#profileField> ?profileField . ?profileField <http://harmonet.org/harmonise#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_hotelero . filter REGEX(?profileField,\"suit\",\"i\") . }")"""


    """def test_alojamiento_hotel_habitaciones_triples(self):
        results = self.buscador.generate_query(
        {"question": "Cuantas habitaciones triples tiene el hotel SOMMOS HOTEL BENASQUE",
         "intents": ["habitacionesHotel", "tipoAlojamiento", "tipoHabitacion"],
         "entities": ["SOMMOS HOTEL BENASQUE", "hotel", "triples"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"S[oóOÓ]MM[oóOÓ]S H[oóOÓ]T[eéEÉ]L B[eéEÉ]N[aáAÁ]SQ[uúUÚ][eéEÉ]\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#profile> ?profile . ?profile <http://harmonet.org/harmonise#profileField> ?profileField . ?profileField <http://harmonet.org/harmonise#fieldValue> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_hotelero . filter REGEX(?profileField,\"triple\",\"i\") . }")"""


    """def test_alojamiento_hotel_servicio(self):
        results = self.buscador.generate_query(
        {"question": "Que servicios tiene el hotel BALNEARIO GRAN HOTEL CASCADA",
         "intents": ["serviciosHotel", "tipoAlojamiento"],
         "entities": ["BALNEARIO GRAN HOTEL CASCADA", "hotel"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?alojamiento <http://opendata.aragon.es/def/ei2a#organizationName> ?etiqueta .  filter REGEX(?etiqueta, \"B[aáAÁ]LN[eéEÉ][aáAÁ]R[iíIÍ][oóOÓ] GR[aáAÁ]N H[oóOÓ]T[eéEÉ]L C[aáAÁ]SC[aáAÁ]D[aáAÁ]\", \"i\") . ?alojamiento <http://harmonet.org/harmonise#service> ?servicios . ?servicios <http://harmonet.org/harmonise#serviceName> ?serviciosName . ?serviciosName <http://harmonet.org/harmonise#referencedValue> ?aux1 . ?aux1 <http://harmonet.org/harmonise#domainValue> ?answer0 . ?alojamiento ?aux0 ei2a:alojamiento_hotelero . }")"""


    '''def test_agricultura_comarca(self):
        results = self.buscador.generate_query(
        {"question": "Cuales son los municipios que pertenecen a la comarca agraria de LA JACETANIA",
         "intents": ["comarcasAgrariasLocalizacion"],
         "entities": ["LA JACETANIA"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?comarca ?aux0 ei2a:comarca_agraria . ?comarca ei2a:organizationName ?answer0 . ?comarca <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?location . ?location <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?aux1 . ?aux1 ei2a:organizationName ?etiqueta .  filter REGEX(?etiqueta, \"L[aáAÁ] J[aáAÁ]C[eéEÉ]T[aáAÁ]N[iíIÍ][aáAÁ]\", \"i\") . }")'''


    '''def test_agricultura_municipio(self):
        results = self.buscador.generate_query(
        {"question": "A que comarcaca agraria pertenece Calatayud",
         "intents": ["municipioComarcasAgrarias"],
         "entities": ["Calatayud"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?comarca ?aux0 ei2a:comarca_agraria . ?comarca ei2a:organizationName ?etiqueta .  filter REGEX(?etiqueta, \"C[aáAÁ]l[aáAÁ]t[aáAÁ]y[uúUÚ]d\", \"i\") . ?comarca <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?location . ?location <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?aux1 . ?aux1 ei2a:organizationName ?answer0 . }")'''


    '''def test_agricultura_villasLocalizacion(self):
        results = self.buscador.generate_query(
        {"question": "A que villas pertenece FRIAS DE ALBARRACIN",
         "intents": ["villasLocalizacion"],
         "entities": ["FRIAS DE ALBARRACIN"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?comarca ?aux0 ei2a:villas_y_tierras . ?comarca ei2a:organizationName ?answer0 . ?comarca <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?location . ?location <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?aux1 . ?aux1 ei2a:organizationName ?etiqueta .  filter REGEX(?etiqueta, \"FR[iíIÍ][aáAÁ]S D[eéEÉ] [aáAÁ]LB[aáAÁ]RR[aáAÁ]C[iíIÍ]N\", \"i\") . }")'''


    '''def test_agricultura_villasMunicipio(self):
        results = self.buscador.generate_query(
        {"question": "Que municipios tienen la COMUNIDAD DE ALBARRACIN",
         "intents": ["municipioVilla"],
         "entities": ["COMUNIDAD DE ALBARRACIN"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?comarca ?aux0 ei2a:villas_y_tierras . ?comarca ei2a:organizationName ?etiqueta .  filter REGEX(?etiqueta, \"C[oóOÓ]M[uúUÚ]N[iíIÍ]D[aáAÁ]D D[eéEÉ] [aáAÁ]LB[aáAÁ]RR[aáAÁ]C[iíIÍ]N\", \"i\") . ?comarca <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?location . ?location <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?aux1 . ?aux1 ei2a:organizationName ?answer0 . }")'''


    '''def test_agricultura_villasInfo(self):
        results = self.buscador.generate_query(
        {"question": "Que informacion tienes de la villa COMUNIDAD DE ALBARRACIN",
         "intents": ["infoVilla"],
         "entities": ["COMUNIDAD DE ALBARRACIN"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2a#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?answer1 ?answer2 ?answer3 ?etiqueta WHERE { ?comarca ?aux0 ei2a:villas_y_tierras . ?comarca ei2a:organizationName ?etiqueta .  filter REGEX(?etiqueta, \"C[oóOÓ]M[uúUÚ]N[iíIÍ]D[aáAÁ]D D[eéEÉ] [aáAÁ]LB[aáAÁ]RR[aáAÁ]C[iíIÍ]N\", \"i\") . ?comarca <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?location . ?location <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?aux1 . ?aux1 ei2a:organizationName ?answer0 . ?comarca <http://opendata.aragon.es/def/ei2a#phone> ?answer1 . ?comarca <http://xmlns.com/foaf/0.1/mbox> ?answer2 . ?comarca <http://opendata.aragon.es/def/ei2a#CIF> ?answer3 . }")'''


    def test_agricultura_fincasCultivoLenoso(self):
        results = self.buscador.generate_query(
        {"question": "dame los nombres de las fincas de cultivos leñosos de zaragoza",
         "intents": ["fincasCultivoLenoso"],
         "entities": ["ZARAGOZA"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2av2#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?comarca ?aux0 ei2a:cultivo_lenoso . ?comarca <http://purl.org/dc/elements/1.1/title> ?answer0 . ?comarca <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?location . ?location <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?aux1 . ?aux1 ei2a:organizationName ?etiqueta .  filter REGEX(?etiqueta, \"Z[aáAÁ]R[aáAÁ]G[oóOÓ]Z[aáAÁ]\", \"i\") . }")


    def test_agricultura_fincasRegadio(self):
        results = self.buscador.generate_query(
        {"question": "dame los nombres de las fincas de regadio de Borja",
         "intents": ["fincasRegadioLenosas"],
         "entities": ["Borja"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2av2#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?comarca ?aux0 ei2a:cultivo_lenoso . ?comarca <http://purl.org/dc/elements/1.1/title> ?answer0 . ?comarca <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?location . ?location <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?aux1 . ?aux1 ei2a:organizationName ?etiqueta .  filter REGEX(?etiqueta, \"B[oóOÓ]rj[aáAÁ]\", \"i\") . ?comarca <http://opendata.aragon.es/def/ei2a#dryOrIrrigated> ?etiqueta2 .  filter REGEX(?etiqueta2, \"R[eéEÉ]g[aáAÁ]d[iíIÍ][oóOÓ]\", \"i\") . }")


    def test_agricultura_fincasSecanoLenosa(self):
        results = self.buscador.generate_query(
        {"question": "dame los nombres de las fincas de secano de Borja",
         "intents": ["fincasSecanoLenosas"],
         "entities": ["Borja"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2av2#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta WHERE { ?comarca ?aux0 ei2a:cultivo_lenoso . ?comarca <http://purl.org/dc/elements/1.1/title> ?answer0 . ?comarca <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?location . ?location <http://www.w3.org/2003/01/geo/wgs84_pos#location> ?aux1 . ?aux1 ei2a:organizationName ?etiqueta .  filter REGEX(?etiqueta, \"B[oóOÓ]rj[aáAÁ]\", \"i\") . ?comarca <http://opendata.aragon.es/def/ei2a#dryOrIrrigated> ?etiqueta2 .  filter REGEX(?etiqueta2, \"S[eéEÉ]c[aáAÁ]n[oóOÓ]\", \"i\") . }")

    # too slow query
    """"
    def test_agricultura_fincasfincasOlivarLenosas(self):
        results = self.buscador.generate_query(
        {"question": "dame los nombres de las fincas de olivar de VALDEJALON",
         "intents": ["fincasOlivarLenosas"],
         "entities": ["VALDEJALON"]})
        self.assertEqual(results,"None")

    """

    def test_agricultura_hectareasAgriculturaEcologica(self):
        results = self.buscador.generate_query(
        {"question": "dame las hectareas de agicultura ecologica destinadas en aragon el 2015",
         "intents": ["hectareasAgriculturaEcologica","Year","tipoLocalizacion"],
         "entities": ["Aragon","2015","Aragon"]})
        self.assertEqual(results,'PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2av2#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta  FROM <http://opendata.aragon.es/graph/datacube/04-040018A> WHERE { ?aux0 <http://opendata.aragon.es/def/iaest/medida#superficie-total-agricultura-ecologica> ?answer0 . ?aux0 <http://purl.org/linked-data/sdmx/2009/dimension#refArea> ?etiqueta2 .  filter REGEX(?etiqueta2, "[aáAÁ]r[aáAÁ]g[oóOÓ]n", "i") . ?aux0 <http://purl.org/linked-data/sdmx/2009/dimension#refPeriod> ?etiqueta filter REGEX( ?etiqueta , <http://reference.data.gov.uk/id/year/2015> )  }')


    def test_agricultura_hectareasOlivares(self):
        results = self.buscador.generate_query(
        {"question": "dame las hectareas de olivares  destinadas en aragon ",
         "intents": ["hectareasOlivares","tipoLocalizacion"],
         "entities": ["aragon","aragon"]})
        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2av2#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta  FROM <http://opendata.aragon.es/graph/datacube/01-010051A> WHERE { ?aux0 <http://opendata.aragon.es/def/iaest/medida#hectareas-en-tierras-labradas-con-cultivo-olivar> ?answer0 . ?aux0 <http://purl.org/linked-data/sdmx/2009/dimension#refArea> ?etiqueta2 .  filter REGEX(?etiqueta2, \"[aáAÁ]r[aáAÁ]g[oóOÓ]n\", \"i\") . }")


    def test_agricultura_hectareasOlivares_1999(self):
        results = self.buscador.generate_query(
        {"question": "dame las hectareas de agicultura ecologica destinadas en aragon el 1999",
         "intents": ["hectareasOlivares","tipoLocalizacion","Year"],
         "entities": ["aragon","aragon","1999"]})

        self.assertEqual(results,"PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX ei2a: <http://opendata.aragon.es/def/ei2av2#> PREFIX locn: <http://www.w3.org/ns/locn#> PREFIX dbpedia: <http://dbpedia.org/ontology/> PREFIX openrec: <http://opendata.aragon.es/recurso/> PREFIX dbpprop: <http://dbpedia.org/property/> PREFIX aragopedia: <http://opendata.aragon.es/def/Aragopedia#> PREFIX sch: <http://schema.org/> PREFIX addr: <http://www.w3.org/ns/locn#> PREFIX foaf: <http://xmlns.com/foaf/0.1/> PREFIX org: <http://www.w3.org/ns/org#> PREFIX vcard: <http://www.w3.org/2006/vcard/ns#> PREFIX sdmx-dimension: <http://purl.org/linked-data/sdmx/2009/dimension#> PREFIX iaest-medida: <http://opendata.aragon.es/def/iaest/medida#> PREFIX iaest-dimension: <http://opendata.aragon.es/def/iaest/dimension#> PREFIX protege: <http://protege.stanford.edu/rdf/HTOv4002#> PREFIX dc: <http://purl.org/dc/elements/1.1/> PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>SELECT DISTINCT ?answer0 ?etiqueta  FROM <http://opendata.aragon.es/graph/datacube/01-010051A> WHERE { ?aux0 <http://opendata.aragon.es/def/iaest/medida#hectareas-en-tierras-labradas-con-cultivo-olivar> ?answer0 . ?aux0 <http://purl.org/linked-data/sdmx/2009/dimension#refArea> ?etiqueta2 .  filter REGEX(?etiqueta2, \"[aáAÁ]r[aáAÁ]g[oóOÓ]n\", \"i\") . ?aux0 <http://purl.org/linked-data/sdmx/2009/dimension#refPeriod> ?etiqueta filter REGEX(?etiqueta, \"1999\", \"i\") . }")


