version: '3.7'
services:
  nginx:
    container_name: argon-nginx
    image: argon-nginx
    build:
      context: ./
      dockerfile: ./src/main/docker/nginx.Dockerfile
    restart: always
    ports:
      - 5000:8080
    volumes:
      - ./model/:/etc/nginx/conf.d/model/
    depends_on:
      - chat
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://argon-nginx:8080/health/"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 4s

    logging: &logging
      driver: journald
      options:
        tag: "{{.ImageName}}/{{.Name}}"

  web:
    container_name: web
    image: web
    build:
      context: ./
      dockerfile: ./src/main/docker/nodejs/Dockerfile
    command: yarn cross-env PORT=3001 HOST=0.0.0.0 NODE_ENV=production BASE=/loginchat node server/index.js
    ports:
      - "3001:3001"
    depends_on:
      - api
      - mongodb
    networks:
      - chatbot-network
    logging: *logging

  ner:
    container_name: ner
    build:
      context: ./
      dockerfile: ./src/main/docker/python/ner.Dockerfile
    image: ner:1.0
    command: ["python3.7", "apirest.py"]
    working_dir: /ner
    environment:
      - CUDA_VISIBLE_DEVICES="-1"
    ports:
      - "4999:4999"
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "wget","-qO-", "http://ner:4999/ner?words=Quien es el alcalde de AÃ±on.&other=True"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging: *logging

  rasa:
    container_name: rasa
    build:
      context: ./
      dockerfile: ./src/main/docker/python/rasa.Dockerfile
    image: rasa:1.0
    command: ["rasa","run","actions","--debug"]
    working_dir: /python/administrator/
    ports:
      - "5050:5050"

    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://rasa:5055/health"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging: *logging

  api:
    container_name: api
    image: rasa:1.0
    command: python3.7 app.py
    working_dir: /python/administrator
    environment:
      - CUDA_VISIBLE_DEVICES="-1"
    ports:
      - "5006:5006"
    depends_on:
      - mongodb
      - rasa
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://api:5006/projects/5dbffabaa47f199730cc722c/models/5dbffabaa47f199730cc7584/intents/5e33fac0b88cc961afe5f69f/templates"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging: *logging

  chat:
    container_name: chat
    image: rasa:1.0
    command: python3.7 app_chat.py 5000 /servicios/chatbot/
    working_dir: /python/administrator/
    environment:
      - CUDA_VISIBLE_DEVICES="-1"
    ports:
      - 5000
    depends_on:
#      - mongodb
      - rasa
#      - ner
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://chat:5000/servicios/chatbot/status"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging: *logging

  mongodb:
    image: mongo:3.7
    container_name: mongodb
    volumes:
      - ./data/:/data/db/
    ports:
      - "27017:27017"
    networks:
      - chatbot-network
    healthcheck:
      test: mongo rasa --eval 'JSON.stringify(db.sessions.findOne({}))' --quiet  | jq -r '._id'
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging: *logging

networks:
  chatbot-network:
    ipam:
      driver: default
      config:
        - subnet: "10.6.0.0/16"
